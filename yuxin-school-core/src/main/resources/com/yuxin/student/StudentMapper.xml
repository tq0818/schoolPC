<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.student.mapper.StudentMapper">
	<resultMap type="com.yuxin.wx.model.student.Student" id="studentResultMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="identityTypeCode" column="identity_type_code" />
		<result property="identityId" column="identity_id" />
		<result property="age" column="age" />
		<result property="birthday" column="birthday" />
		<result property="educationCode" column="education_code" />
		<result property="hkAddress" column="hk_address" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="qq" column="qq" />
		<result property="homePhone" column="home_phone" />
		<result property="officePhone" column="office_phone" />
		<result property="weixinId" column="weixin_id" />
		<result property="emergencyContact" column="emergency_contact" />
		<result property="emergencyPhone" column="emergency_phone" />
		<result property="remark" column="remark" />
		<result property="remarkName" column="remark_name" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="userId" column="user_id"/>
		<result property="province" column="province"/>
		<result property="city" column="city"/>
		<result property="county" column="county"/>
		<result property="addressDetail" column="address_detail"/>
		<result property="username" column="username"/>
		<result property="groupOneId" column="group_one_id"/>
		<result property="groupTwoId" column="group_two_id"/>
		<result property="proxyOrgId" column="proxy_org_id"/>

		<result property="eduIdentity" column="edu_identity"/>
		<result property="eduArea" column="edu_area"/>
		<result property="eduSchool" column="edu_school"/>
		<result property="eduStep" column="edu_step"/>
		<result property="eduYear" column="edu_year"/>
		<result property="eduClass" column="edu_class"/>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentVo" id="studentResultMap2">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="identityTypeCode" column="identity_type_code" />
		<result property="identityId" column="identity_id" />
		<result property="age" column="age" />
		<result property="birthday" column="birthday" />
		<result property="educationCode" column="education_code" />
		<result property="hkAddress" column="hk_address" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="qq" column="qq" />
		<result property="homePhone" column="home_phone" />
		<result property="officePhone" column="office_phone" />
		<result property="weixinId" column="weixin_id" />
		<result property="emergencyContact" column="emergency_contact" />
		<result property="emergencyPhone" column="emergency_phone" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="sid" column="sid" />
		<result property="applyTime" column="apply_time" />
		<result property="examTermId" column="exam_term_id" />
		<result property="examTermName" column="exam_term_name" />
		<result property="itemOneId" column="item_one_id" />
		<result property="itemOneName" column="item_one_name" />
		<result property="itemSecondId" column="item_second_id" />
		<result property="itemSecondName" column="item_second_name" />
		<result property="lessonTypeId" column="lesson_type_id" />
		<result property="lessonTypeName" column="lesson_type_name" />
		<result property="lessonTypeHour" column="lesson_type_hour" />
		<result property="stuId" column="stu_id" />
		<result property="applyPlaceId" column="apply_place_id" />
		<result property="applyChannelCode" column="apply_channel_code" />
		<result property="payStatusCode" column="pay_status_code" />
		<result property="bizStatusCode" column="biz_status_code" />
		<result property="isAgent" column="is_agent" />
		<result property="isAgentMaterialComplete" column="is_agent_material_complete" />
		<result property="isAgentComplete" column="is_agent_complete" />
		<result property="agentRemark" column="agent_remark" />
		<result property="trainingFee" column="training_fee" />
		<result property="examAgentFee" column="exam_agent_fee" />
		<result property="offerTypeCode" column="offer_type_code" />
		<result property="offerAmount" column="offer_amount" />
		<result property="totalAmount" column="total_amount" />
		<result property="paymentTypeCode" column="payment_type_code" />
		<result property="remark" column="remark" />
		<result property="relatedPayId" column="related_pay_id" />
		<result property="username" column="username"/>

		<result property="eduIdentity" column="edu_identity"/>
		<result property="eduArea" column="edu_area"/>
		<result property="eduSchool" column="edu_school"/>
		<result property="eduStep" column="edu_step"/>
		<result property="eduYear" column="edu_year"/>
		<result property="eduClass" column="edu_class"/>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.student.StuVo" id="stuVoResultMap">
		<result property="id" column="id"/>
		<result property="applyTime" column="apply_time"/>
		<result property="classTypeName" column="class_type_name"/>
		<result property="name" column="name"/>
		<result property="mobile" column="mobile"/>
		<result property="applyChannelCode" column="apply_channel_code"/>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentListVo" id="studentsListMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="identityTypeCode" column="identity_type_code" />
		<result property="identityId" column="identity_id" />
		<result property="age" column="age" />
		<result property="birthday" column="birthday" />
		<result property="educationCode" column="education_code" />
		<result property="hkAddress" column="hk_address" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="qq" column="qq" />
		<result property="homePhone" column="home_phone" />
		<result property="officePhone" column="office_phone" />
		<result property="weixinId" column="weixin_id" />
		<result property="emergencyContact" column="emergency_contact" />
		<result property="emergencyPhone" column="emergency_phone" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="status" column="status" />
		<result property="emailAuthSign" column="email_auth_sign" />
		<result property="emailAuthSendtime" column="email_auth_sendtime" />
		<result property="emailAuthCode" column="email_auth_code" />
		<result property="userCity" column="user_city" />
		<result property="uuid" column="uuid" />
		<result property="headPicMin" column="head_pic_min" />
		<result property="headPicMid" column="head_pic_mid" />
		<result property="headPicMax" column="head_pic_max" />
		<result property="registTime" column="regist_time" />
		<result property="interests" column="interests" />
		<result property="vipFlag" column="vip_flag" />
		<result property="registType" column="regist_type" />
		<result property="promoteSource" column="promote_source" />
		<result property="promoteKeyword" column="promote_keyword" />
		<result property="paymaterCount" column="paymaterCount"/>
		<result property="userId" column="userId"/>
		<result property="signUpTime" column="signUpTime"/>
		<result property="isAgent" column="isAgent"/>
		<result property="lastLoginTime" column="lastLoginTime"/>
		<result property="province" column="province"/>
		<result property="city" column="city"/>
		<result property="county" column="county"/>
		<result property="addressDetail" column="address_detail"/>
		<result property="memberId" column="member_id"/>
		<result property="memberLevel" column="member_level"/>
		<result property="memberBuyLength" column="member_buy_length"/>
		<result property="memberStatus" column="member_status"/>
		<result property="username" column="username"/>
		
		<result property="protocolId" column="protocol_id"/>

		<result property="eduIdentity" column="edu_identity"/>
		<result property="eduArea" column="edu_area"/>
		<result property="eduSchool" column="edu_school"/>
		<result property="eduStep" column="edu_step"/>
		<result property="eduYear" column="edu_year"/>
		<result property="eduClass" column="edu_class"/>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.user.UsersFrontVo" id="usersFrontVoResultMap">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="status" column="status" />
		<result property="companyId" column="company_id" />
		<result property="emailAuthSign" column="email_auth_sign" />
		<result property="emailAuthSendtime" column="email_auth_sendtime" />
		<result property="emailAuthCode" column="email_auth_code" />
		<result property="userCity" column="user_city" />
		<result property="uuid" column="uuid" />
		<result property="headPicMin" column="head_pic_min" />
		<result property="headPicMid" column="head_pic_mid" />
		<result property="headPicMax" column="head_pic_max" />
		<result property="registTime" column="regist_time" />
		<result property="interests" column="interests" />
		<result property="vipFlag" column="vip_flag" />
		<result property="registType" column="regist_type" />
		<result property="userSign" column="user_sign" />
		<result property="promoteSource" column="promote_source" />
		<result property="promoteKeyword" column="promote_keyword" />
		<result property="nickName" column="nick_name" />
	
		<result property="stuId" column="stuId"/>
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="identityTypeCode" column="identity_type_code" />
		<result property="identityId" column="identity_id" />
		<result property="age" column="age" />
		<result property="birthday" column="birthday" />
		<result property="educationCode" column="education_code" />
		<result property="hkAddress" column="hk_address" />
		<result property="qq" column="qq" />
		<result property="homePhone" column="home_phone" />
		<result property="officePhone" column="office_phone" />
		<result property="weixinId" column="weixin_id" />
		<result property="emergencyContact" column="emergency_contact" />
		<result property="emergencyPhone" column="emergency_phone" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="companyId" column="company_id" />
		<result property="remarkName" column="remark_name" />
		
		<result property="memberLevel" column="member_level" />
		<result property="memberId" column="member_id" />
		<result property="memberBuyLength" column="member_buy_length" />
		<result property="memberEndTime" column="member_end_time" />
		<result property="integralRemaining" column="integral_remaining" />
		<result property="memberStatus" column="member_status" />
		
		<result property="weibo" column="weibo" />
		<result property="invitCode" column="invite_code"/>
	</resultMap>
	<resultMap type="com.yuxin.wx.model.system.SysConfigDict" id="sysConfigDict">
		<result property="id" column="id"/>
		<result property="dictCode" column="dict_code"/>
		<result property="itemCode" column="item_code"/>
		<result property="itemValue" column="item_value"/>
		<result property="parentItemId" column="parent_item_id"/>
	</resultMap>
	
	<sql id="table_columns">
		id,
		name,
		sex,
		identity_type_code,
		identity_id,
		age,
		birthday,
		education_code,
		hk_address,
		mobile,
		email,
		qq,
		home_phone,
		office_phone,
		weixin_id,
		emergency_contact,
		emergency_phone,
		remark,
		remark_name,
		create_time,
		creator,
		update_time,
		updator,
		delete_flag,
		user_id,
		province,
		city,
		county,
		address_detail,
		group_one_id,
		group_two_id,
		proxy_org_id,
		edu_identity,
		edu_area,
		edu_school,
		edu_step,
		edu_year,
		edu_class,
		is_in_school
    </sql>
    <sql id="table_columns_s">
		s.id,
		s.name,
		s.sex,
		s.identity_type_code,
		s.identity_id,
		s.age,
		s.birthday,
		s.education_code,
		s.hk_address,
		s.mobile,
		s.email,
		s.qq,
		s.home_phone,
		s.office_phone,
		s.weixin_id,
		s.emergency_contact,
		s.emergency_phone,
		s.remark,
		s.remark_name,
		s.create_time,
		s.creator,
		s.update_time,
		s.updator,
		s.delete_flag,
		s.user_id,
		s.province,
		s.city,
		s.county,
		s.address_detail,
		s.group_one_id,
		s.group_two_id,
		s.proxy_org_id,
		s.edu_identity,
		s.edu_area,
		s.edu_school,
		s.edu_step,
		s.edu_year,
		s.edu_class
    </sql>
    <sql id="table_vo_columns">
		u.id,
		u.username,
		u.password,
		u.mobile,
		u.email,
		u.status,
		u.email_auth_sign,
		u.email_auth_sendtime,
		u.email_auth_code,
		u.user_city,
		u.uuid,
		u.head_pic_min,
		u.head_pic_mid,
		u.head_pic_max,
		u.regist_time,
		u.interests,
		u.vip_flag,
		u.regist_type,
		u.promote_source,
		u.promote_keyword,
		u.user_sign,
		u.nick_name,
		s.id as stuId,
		s.name,
		s.sex,
		s.identity_type_code,
		s.identity_id,
		s.age,
		s.birthday,
		s.education_code,
		s.hk_address,
		s.qq,
		s.home_phone,
		s.office_phone,
		s.weixin_id,
		s.emergency_contact,
		s.emergency_phone,
		s.remark,
		s.create_time,
		s.creator,
		s.update_time,
		s.updator,
		s.delete_flag,
		s.remark_name,
		u.member_level,
		u.member_id,
		u.member_buy_length,
		u.member_end_time,
		u.integral_remaining,
		u.member_status,
		u.qq,
		u.weibo,
		u.invite_code,
		s.edu_identity,
		s.edu_area,
		s.edu_school,
		s.edu_step,
		s.edu_year,
		s.edu_class
    </sql>
        
	<sql id="entity_properties">
		#{id},
		#{name},
		#{sex},
		#{identityTypeCode},
		#{identityId},
		#{age},
		#{birthday},
		#{educationCode},
		#{hkAddress},
		#{mobile},
		#{email},
		#{qq},
		#{homePhone},
		#{officePhone},
		#{weixinId},
		#{emergencyContact},
		#{emergencyPhone},
		#{remark},
		#{remarkName},
		#{createTime},
		#{creator},
		#{updateTime},
		#{updator},
		#{deleteFlag},
		#{userId},
		#{province},
		#{city},
		#{county},
		#{addressDetail},
		#{groupOneId},
		#{groupTwoId},
		#{proxyOrgId},
		#{eduIdentity},
		#{eduArea},
		#{eduSchool},
		#{eduStep},
		#{eduYear},
		#{eduClass},
		#{isInSchool}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.student.Student" useGeneratedKeys="true" keyProperty="id">
		insert into student( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into student( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from student
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from student
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.student.Student">
		update student 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="sex != null and sex != ''">sex = #{sex},</if>
			<if test="identityTypeCode != null and identityTypeCode != ''">identity_type_code = #{identityTypeCode},</if>
			<if test="identityId != null ">identity_id = #{identityId},</if>
			<if test="age != null and age != ''">age = #{age},</if>
			<if test="birthday != null and birthday != ''">birthday = #{birthday},</if>
			<if test="educationCode != null and educationCode != ''">education_code = #{educationCode},</if>
			<if test="hkAddress != null ">hk_address = #{hkAddress},</if>
			<if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
			<if test="email != null ">email = #{email},</if>
			<if test="qq != null ">qq = #{qq},</if>
			<if test="homePhone != null">home_phone = #{homePhone},</if>
			<if test="officePhone != null ">office_phone = #{officePhone},</if>
			<if test="weixinId != null ">weixin_id = #{weixinId},</if>
			<if test="emergencyContact != null ">emergency_contact = #{emergencyContact},</if>
			<if test="emergencyPhone != null ">emergency_phone = #{emergencyPhone},</if>
			<if test="remark != null ">remark = #{remark},</if>
			<if test="remarkName != null">remark_name = #{remarkName},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="creator != null and creator != ''">creator = #{creator},</if>
			<if test="updateTime != null and updateTime != ''">update_time = #{updateTime},</if>
			<if test="updator != null and updator != ''">updator = #{updator},</if>
			<if test="deleteFlag != null and deleteFlag != ''">delete_flag = #{deleteFlag},</if>
			<if test="userId != null and userId != ''">user_id = #{userId},</if>
			<if test="province != null and province != ''">province = #{province},</if>
			<if test="city != null and city != ''">city = #{city},</if>
			<if test="county != null and county != ''">county = #{county},</if>
			<if test="addressDetail != null">address_detail = #{addressDetail},</if>
			<if test="groupOneId != null and groupOneId != ''">group_one_id = #{groupOneId},</if>
			<if test="groupOneId == null or groupOneId == ''">group_one_id = null,</if>
			<if test="groupTwoId != null and groupTwoId != ''">group_two_id = #{groupTwoId},</if>
			<if test="groupTwoId == null or groupTwoId == ''">group_two_id = null,</if>
			<if test="proxyOrgId != null and proxyOrgId != ''">proxy_org_id = #{proxyOrgId},</if>

			<if test="eduIdentity != null">edu_identity = #{eduIdentity},</if>
			<if test="eduArea != null">edu_area = #{eduArea},</if>
			<if test="eduSchool != null">edu_school = #{eduSchool},</if>
			<if test="eduStep != null">edu_step = #{eduStep},</if>
			<if test="eduYear != null">edu_year = #{eduYear},</if>
			<if test="eduClass != null">edu_class = #{eduClass},</if>
			<if test="isInSchool != null">is_in_school = #{isInSchool},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<update id="updateByMobile" parameterType="com.yuxin.wx.model.student.Student">
		update student 
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="sex != null and sex != ''">sex = #{sex},</if>
			<if test="identityTypeCode != null and identityTypeCode != ''">identity_type_code = #{identityTypeCode},</if>
			<if test="identityId != null and identityId != ''">identity_id = #{identityId},</if>
			<if test="age != null and age != ''">age = #{age},</if>
			<if test="birthday != null and birthday != ''">birthday = #{birthday},</if>
			<if test="educationCode != null and educationCode != ''">education_code = #{educationCode},</if>
			<if test="hkAddress != null and hkAddress != ''">hk_address = #{hkAddress},</if>
			<if test="email != null and email != ''">email = #{email},</if>
			<if test="qq != null and qq != ''">qq = #{qq},</if>
			<if test="homePhone != null and homePhone != ''">home_phone = #{homePhone},</if>
			<if test="officePhone != null and officePhone != ''">office_phone = #{officePhone},</if>
			<if test="weixinId != null and weixinId != ''">weixin_id = #{weixinId},</if>
			<if test="emergencyContact != null and emergencyContact != ''">emergency_contact = #{emergencyContact},</if>
			<if test="emergencyPhone != null and emergencyPhone != ''">emergency_phone = #{emergencyPhone},</if>
			<if test="remark != null and remark != ''">remark = #{remark},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="creator != null and creator != ''">creator = #{creator},</if>
			<if test="updateTime != null and updateTime != ''">update_time = #{updateTime},</if>
			<if test="updator != null and updator != ''">updator = #{updator},</if>
			<if test="deleteFlag != null and deleteFlag != ''">delete_flag = #{deleteFlag},</if>
			<if test="userId != null and userId != ''">user_id = #{userId},</if>
			<if test="groupOneId != null and groupOneId != ''">group_one_id = #{groupOneId},</if>
			<if test="groupOneId == null or groupOneId == ''">group_one_id = null,</if>
			<if test="groupTwoId != null and groupTwoId != ''">group_two_id = #{groupTwoId},</if>
			<if test="groupTwoId == null or groupTwoId == ''">group_two_id = null,</if>

			<if test="eduIdentity != null">edu_identity = #{eduIdentity},</if>
			<if test="eduArea != null and eduArea != ''">edu_area = #{eduArea},</if>
			<if test="eduSchool != null and eduSchool != ''">edu_school = #{eduSchool},</if>
			<if test="eduStep != null and eduStep != ''">edu_step = #{eduStep},</if>
			<if test="eduYear != null and eduYear != ''">edu_year = #{eduYear},</if>
			<if test="eduClass != null and eduClass != ''">edu_class = #{eduClass},</if>
			<if test="isInSchool != null">is_in_school = #{isInSchool},</if>
		</trim>
		<where>
			1=1 and mobile=#{mobile}	
		</where>
	</update>
	
	<select id="findById" resultMap="studentResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from student
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="studentResultMap">
		select <include refid="table_columns" /> 
		from student
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="name != null and name != ''">and name = #{name}</if>
			<if test="sex != null and sex != ''">and sex = #{sex}</if>
			<if test="identityTypeCode != null and identityTypeCode != ''">and identity_type_code = #{identityTypeCode}</if>
			<if test="identityId != null and identityId != ''">and identity_id = #{identityId}</if>
			<if test="age != null and age != ''">and age = #{age}</if>
			<if test="birthday != null and birthday != ''">and birthday = #{birthday}</if>
			<if test="educationCode != null and educationCode != ''">and education_code = #{educationCode}</if>
			<if test="hkAddress != null and hkAddress != ''">and hk_address = #{hkAddress}</if>
			<if test="mobile != null and mobile != ''">and mobile = #{mobile}</if>
			<if test="email != null and email != ''">and email = #{email}</if>
			<if test="qq != null and qq != ''">and qq = #{qq}</if>
			<if test="homePhone != null and homePhone != ''">and home_phone = #{homePhone}</if>
			<if test="officePhone != null and officePhone != ''">and office_phone = #{officePhone}</if>
			<if test="weixinId != null and weixinId != ''">and weixin_id = #{weixinId}</if>
			<if test="emergencyContact != null and emergencyContact != ''">and emergency_contact = #{emergencyContact}</if>
			<if test="emergencyPhone != null and emergencyPhone != ''">and emergency_phone = #{emergencyPhone}</if>
			<if test="remark != null and remark != ''">and remark = #{remark}</if>
			<if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
			<if test="creator != null and creator != ''">and creator = #{creator}</if>
			<if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
			<if test="updator != null and updator != ''">and updator = #{updator}</if>
			<if test="deleteFlag != null and deleteFlag != ''">and delete_flag = #{deleteFlag}</if>
			<if test="groupOneId != null and groupOneId != ''">and group_one_id = #{groupOneId}</if>
			<if test="groupTwoId != null and groupTwoId != ''">and group_two_id = #{groupTwoId}</if>

			<if test="eduIdentity != null">and edu_identity = #{eduIdentity}</if>
			<if test="eduArea != null and eduArea != ''">and edu_area = #{eduArea}</if>
			<if test="eduSchool != null and eduSchool != ''">and edu_school = #{eduSchool}</if>
			<if test="eduStep != null and eduStep != ''">and edu_step = #{eduStep}</if>
			<if test="eduYear != null and eduYear != ''">and edu_year = #{eduYear}</if>
			<if test="eduClass != null and eduClass != ''">and edu_class = #{eduClass}</if>
		</trim>
	</sql>
	
	<sql id="page_where2">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="name != null and name != ''">and name = #{name}</if>
			<if test="sex != null and sex != ''">and sex = #{sex}</if>
			<if test="identityTypeCode != null and identityTypeCode != ''">and identity_type_code = #{identityTypeCode}</if>
			<if test="identityId != null and identityId != ''">and identity_id = #{identityId}</if>
			<if test="age != null and age != ''">and age = #{age}</if>
			<if test="birthday != null and birthday != ''">and birthday = #{birthday}</if>
			<if test="educationCode != null and educationCode != ''">and education_code = #{educationCode}</if>
			<if test="hkAddress != null and hkAddress != ''">and hk_address = #{hkAddress}</if>
			<if test="mobile != null and mobile != ''">and mobile = #{mobile}</if>
			<if test="email != null and email != ''">and email = #{email}</if>
			<if test="qq != null and qq != ''">and qq = #{qq}</if>
			<if test="homePhone != null and homePhone != ''">and home_phone = #{homePhone}</if>
			<if test="officePhone != null and officePhone != ''">and office_phone = #{officePhone}</if>
			<if test="weixinId != null and weixinId != ''">and weixin_id = #{weixinId}</if>
			<if test="emergencyContact != null and emergencyContact != ''">and emergency_contact = #{emergencyContact}</if>
			<if test="emergencyPhone != null and emergencyPhone != ''">and emergency_phone = #{emergencyPhone}</if>
			<if test="remark != null and remark != ''">and remark = #{remark}</if>
			<if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
			<if test="creator != null and creator != ''">and creator = #{creator}</if>
			<if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
			<if test="updator != null and updator != ''">and updator = #{updator}</if>
			<if test="deleteFlag != null and deleteFlag != ''">and delete_flag = #{deleteFlag}</if>
			<if test="deleteFlag != null and deleteFlag != ''">and delete_flag = #{deleteFlag}</if>
			<if test="groupOneId != null and groupOneId != ''">and group_one_id = #{groupOneId}</if>
			<if test="groupTwoId != null and groupTwoId != ''">and group_two_id = #{groupTwoId}</if>

			<if test="eduIdentity != null">and edu_identity = #{eduIdentity}</if>
			<if test="eduArea != null and eduArea != ''">and edu_area = #{eduArea}</if>
			<if test="eduSchool != null and eduSchool != ''">and edu_school = #{eduSchool}</if>
			<if test="eduStep != null and eduStep != ''">and edu_step = #{eduStep}</if>
			<if test="eduYear != null and eduYear != ''">and edu_year = #{eduYear}</if>
			<if test="eduClass != null and eduClass != ''">and edu_class = #{eduClass}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="studentResultMap" parameterType="com.yuxin.wx.model.student.Student">
		select <include refid="table_columns" />
		from student
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.student.Student">
		select count(id) from student
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	<select id="queryListByPayment" resultMap="studentResultMap2" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select s.name,s.sex,s.identity_id as identityId ,s.identity_type_code as identityTypeCode,s.age,s.birthday,s.education_code as educationCode,s.hk_address as hkAddress,s.mobile,s.email,s.qq,s.home_phone as homePhone,s.office_phone as officePhone,s.weixin_id as weixinId,s.emergency_contact as emergencyContact,s.emergency_phone as emergencyPhone,
		p.id as pid,p.apply_time as applyTime,p.exam_term_id as examTermId,p.exam_term_name as examTermName,p.item_one_id as itemOneId,p.item_one_name as itemOneName,p.item_second_id as itemSecondId,p.item_second_name as itemSecondName,p.commodity_id as classTypeId,p.class_type_name as classTypeName,p.class_type_hour as classTypeHour,p.stu_id as stuId,
		p.campus_id as campusId,p.apply_place_id as applyPlaceId,p.apply_channel_code as applyChannelCode,p.pay_status_code as payStatusCode,p.biz_status_code as bizStatusCode,p.is_agent as isAgent,p.is_agent_material_complete as isAgentMaterialComplete,p.is_agent_complete as isAgentComplete,p.agent_remark as agentRemark,p.training_fee as trainingFee,p.exam_agent_fee as examAgentFee,
		p.offer_type_code as offerTypeCode,p.offer_amount as offerAmount,p.total_amount as totalAmount,p.payment_type_code as paymentTypeCode,p.remark,p.related_pay_id as relatedPayId,p.create_time as createTime,p.creator,p.update_time as updateTime,(select username from users where id=p.updator) as updator,p.delete_flag  as deleteFlag,uf.username as username
		from student as s,student_pay_master as p ,users_front as uf,company c
		where s.id=p.stu_id  and p.origin_type=0 and s.delete_flag=0 and p.delete_flag=0 and p.commodity_type='COMMODITY_CLASS'  and s.user_id=uf.id
		 and p.school_id=#{schoolId} and c.id=#{companyId} and p.is_agent=1 and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemOneId != null and itemOneId != ''">and p.item_one_id=#{itemOneId}</if>
		<if test="examTermId != null and examTermId != ''">and p.exam_term_id=#{examTermId}</if>
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="mobile != null and mobile != ''"> and s.mobile=#{mobile}</if>
		<if test="isAgentMaterialComplete != null and isAgentMaterialComplete != ''">
			<choose>
				<when test="isAgentMaterialComplete==0">
					 and (p.is_agent_material_complete=#{isAgentMaterialComplete} or  p.is_agent_material_complete is null)
				</when>
				<otherwise>
					and p.is_agent_material_complete=#{isAgentMaterialComplete}
				</otherwise>
			</choose>
		 </if>
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="queryListByPaymentNew" resultMap="studentResultMap2" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select s.name,s.sex,s.identity_id as identityId ,s.identity_type_code as identityTypeCode,s.age,s.birthday,s.education_code as educationCode,s.hk_address as hkAddress,s.mobile,s.email,s.qq,s.home_phone as homePhone,s.office_phone as officePhone,s.weixin_id as weixinId,s.emergency_contact as emergencyContact,s.emergency_phone as emergencyPhone,
		p.id as pid,p.apply_time as applyTime,p.exam_term_id as examTermId,p.exam_term_name as examTermName,p.item_one_id as itemOneId,p.item_one_name as itemOneName,p.item_second_id as itemSecondId,p.item_second_name as itemSecondName,p.commodity_id as classTypeId,p.class_type_name as classTypeName,p.class_type_hour as classTypeHour,p.stu_id as stuId,
		p.campus_id as campusId,p.apply_place_id as applyPlaceId,p.apply_channel_code as applyChannelCode,p.pay_status_code as payStatusCode,p.biz_status_code as bizStatusCode,p.is_agent as isAgent,p.is_agent_material_complete as isAgentMaterialComplete,p.is_agent_complete as isAgentComplete,p.agent_remark as agentRemark,p.training_fee as trainingFee,p.exam_agent_fee as examAgentFee,
		p.offer_type_code as offerTypeCode,p.offer_amount as offerAmount,p.total_amount as totalAmount,p.payment_type_code as paymentTypeCode,p.remark,p.related_pay_id as relatedPayId,p.create_time as createTime,p.creator,p.update_time as updateTime,(select username from users where id=p.updator) as updator,p.delete_flag  as deleteFlag,uf.username as username
		from student as s,student_pay_master as p ,users_front as uf,company c
		where s.id=p.stu_id and p.origin_type=0  and s.delete_flag=0 and p.delete_flag=0 and p.commodity_type='COMMODITY_CLASS'  and s.user_id=uf.id
		 and p.school_id=#{schoolId} and c.id=#{companyId} and p.is_agent=1 and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemOneId != null and itemOneId != ''">and p.item_one_id=#{itemOneId}</if>
		<if test="examTermId != null and examTermId != ''">and p.exam_term_id=#{examTermId}</if>
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="mobile != null and mobile != ''"> and (s.mobile like '%${mobile}%' or uf.username like '%${mobile}%')</if>
		<if test="isAgentMaterialComplete != null and isAgentMaterialComplete != ''">
			<choose>
				<when test="isAgentMaterialComplete==0">
					 and (p.is_agent_material_complete=#{isAgentMaterialComplete} or  p.is_agent_material_complete is null)
				</when>
				<otherwise>
					and p.is_agent_material_complete=#{isAgentMaterialComplete}
				</otherwise>
			</choose>
		 </if>
		limit #{firstIndex},#{pageSize}
	</select>
	<select id="pageCount2New" resultType="int" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select count(1) 
		from student as s,student_pay_master as p ,users_front as uf,company c
		where s.id=p.stu_id and p.origin_type=0  and s.delete_flag=0 and p.delete_flag=0 and p.commodity_type='COMMODITY_CLASS'  and s.user_id=uf.id
		 and p.school_id=#{schoolId} and c.id=#{companyId} and p.is_agent=1 and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemOneId != null and itemOneId != ''">and p.item_one_id=#{itemOneId}</if>
		<if test="examTermId != null and examTermId != ''">and p.exam_term_id=#{examTermId}</if>
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="mobile != null and mobile != ''"> and (s.mobile like '%${mobile}%' or uf.username like '%${mobile}%')</if>
		<if test="isAgentMaterialComplete != null and isAgentMaterialComplete != ''">
			<choose>
				<when test="isAgentMaterialComplete==0">
					 and (p.is_agent_material_complete=#{isAgentMaterialComplete} or  p.is_agent_material_complete is null)
				</when>
				<otherwise>
					and p.is_agent_material_complete=#{isAgentMaterialComplete}
				</otherwise>
			</choose>
		 </if>
	</select>
	
	<select id="findListByPayment" resultType="com.yuxin.wx.vo.student.StudentVo" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select s.name,s.sex,s.identity_id as identityId ,s.identity_type_code as identityTypeCode,s.age,s.birthday,s.education_code as educationCode,s.hk_address as hkAddress,s.mobile,s.email,s.qq,s.home_phone as homePhone,s.office_phone as officePhone,s.weixin_id as weixinId,s.emergency_contact as emergencyContact,s.emergency_phone as emergencyPhone,
		p.id as pid,p.apply_time as applyTime,p.exam_term_id as examTermId,p.exam_term_name as examTermName,p.item_one_id as itemOneId,p.item_one_name as itemOneName,p.item_second_id as itemSecondId,p.item_second_name as itemSecondName,p.commodity_id as classTypeId,p.class_type_name as classTypeName,p.class_type_hour as classTypeHour,p.stu_id as stuId,
		p.campus_id as campusId,p.apply_place_id as applyPlaceId,p.apply_channel_code as applyChannelCode,p.pay_status_code as payStatusCode,p.biz_status_code as bizStatusCode,case p.is_agent when 1 then '是' else '否' end as isAgent,case p.is_agent_material_complete when 1 then '是' else '否' end as isAgentMaterialComplete,p.is_agent_complete as isAgentComplete,p.agent_remark as agentRemark,p.training_fee as trainingFee,p.exam_agent_fee as examAgentFee,
		p.offer_type_code as offerTypeCode,p.offer_amount as offerAmount,p.total_amount as totalAmount,p.payment_type_code as paymentTypeCode,p.remark,p.related_pay_id as relatedPayId,p.create_time as createTime,p.creator,p.update_time as updateTime,(select real_name from users where id=p.updator) as updator,p.delete_flag  as deleteFlag
		from student as s,student_pay_master as p,company c
		where s.id=p.stu_id  and p.origin_type=0 and s.delete_flag=0 and p.delete_flag=0 and p.commodity_type='COMMODITY_CLASS' 
		 and p.school_id=#{schoolId} and c.id=#{companyId} and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemOneId != null and itemOneId != ''">and p.item_one_id=#{itemOneId}</if>
		<if test="examTermId != null and examTermId != ''">and p.exam_term_id=#{examTermId}</if>
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="mobile != null and mobile != ''"> and s.mobile=#{mobile}</if>
	</select>
	<select id="pageCount2" resultType="int" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select count(1) 
		from student as s,student_pay_master as p ,users_front as uf,company c
		where s.id=p.stu_id  and p.origin_type=0 and s.delete_flag=0 and p.delete_flag=0 and p.commodity_type='COMMODITY_CLASS'  and s.user_id=uf.id
		 and p.school_id=#{schoolId} and c.id=#{companyId} and p.is_agent=1 and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemOneId != null and itemOneId != ''">and p.item_one_id=#{itemOneId}</if>
		<if test="examTermId != null and examTermId != ''">and p.exam_term_id=#{examTermId}</if>
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="mobile != null and mobile != ''"> and s.mobile=#{mobile}</if>
		<if test="isAgentMaterialComplete != null and isAgentMaterialComplete != ''">
			<choose>
				<when test="isAgentMaterialComplete==0">
					 and (p.is_agent_material_complete=#{isAgentMaterialComplete} or  p.is_agent_material_complete is null)
				</when>
				<otherwise>
					and p.is_agent_material_complete=#{isAgentMaterialComplete}
				</otherwise>
			</choose>
		 </if>
		 limit 1
	</select>
	<select id="queryListByPayment2" resultType="com.yuxin.wx.vo.student.StudentVo" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select DISTINCT s.id, s.name,s.sex,s.age,s.education_code as educationCode,s.mobile,
		str_to_date(p.apply_time,'%Y-%m-%d') as applyTime,p.class_type_name as classTypeName,p.total_amount as totalAmount,p.updator
		from student as s,student_pay_master as p,class_type as t,company c
		where s.id=p.stu_id and p.origin_type=0  and s.delete_flag=0 and p.delete_flag=0 and t.id=p.commodity_id and p.commodity_type='COMMODITY_CLASS' and t.origin_type=0
		and p.item_one_id=#{itemOneId} and p.school_id=#{schoolId} and c.id=#{companyId} and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="classTypeId != null and classTypeId != ''">and p.commodity_id like '%${classTypeId}%'</if>
		<if test="tpublishStatus != null and tpublishStatus != ''">and t.publish_status like '%${tpublishStatus}%'</if>
		limit #{firstIndex},#{pageSize}
	</select>
		<select id="findListByPayment2" resultType="com.yuxin.wx.vo.student.StudentVo" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select DISTINCT s.id, s.name,(select item_value from sys_config_dict where item_code=s.sex) as sex,s.age,(select item_value from sys_config_dict where item_code=s.education_code) as educationCode,s.mobile,
		str_to_date(p.apply_time,'%Y-%m-%d') as applyTime,p.class_type_name as classTypeName,p.total_amount as totalAmount,(select real_name from users where id=p.updator) as updator
		from student as s,student_pay_master as p,class_type as t,company c
		where s.id=p.stu_id  and p.origin_type=0 and s.delete_flag=0 and p.delete_flag=0 and t.id=p.commodity_id and p.commodity_type='COMMODITY_CLASS'  and t.origin_type=0
		and p.item_one_id=#{itemOneId} and p.school_id=#{schoolId} and c.id=#{companyId} and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="classTypeId != null and classTypeId != ''">and p.commodity_id like '%${classTypeId}%'</if>
		<if test="tpublishStatus != null and tpublishStatus != ''">and t.publish_status like '%${tpublishStatus}%'</if>
	</select>
	<select id="pageCount3" resultType="int" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select count(1) from student as s,student_pay_master as p ,class_type as t,company c
		where s.id=p.stu_id and p.origin_type=0  and s.delete_flag=0 and p.delete_flag=0 and p.commodity_id=t.id and p.commodity_type='COMMODITY_CLASS'  and t.origin_type=0
		and p.item_one_id=#{itemOneId} and p.school_id=#{schoolId} and c.id=#{companyId} and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="classTypeId != null and classTypeId != ''">and p.commodity_id like '%${classTypeId}%'</if>
		<if test="tpublishStatus != null and tpublishStatus != ''">and t.publish_status like '%${tpublishStatus}%'</if>
		limit 1
	</select>
	
	<select id="queryListByPayment3" resultType="com.yuxin.wx.vo.student.StudentVo" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select distinct s.id , s. NAME, s.mobile, p.class_type_name AS classTypeName, m.name as nname, str_to_date(p.apply_time,'%Y-%m-%d') as applyTime,(select real_name from users where id=p.updator) as updator
		from student AS s ,student_pay_master AS p , student_pay_slave AS l ,class_module_no as m,company c
		where s.id = p.stu_id and p.origin_type=0  and p.id = l.pay_master_id and m.id=l.resource_id  and c.id=#{companyId} and (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school)
		s.delete_flag = 0 AND p.delete_flag = 0 AND p.item_one_id =#{itemOneId} and p.school_id=#{schoolId} 
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="nname != null and nname != ''">and m.name like '%${nname}%'</if>
		<if test="npublishStatus != null and npublishStatus != ''">and m.publish_status =#{npublishStatus}</if>
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount4" resultType="int" parameterType="com.yuxin.wx.vo.student.StudentVo">
		select count(distinct s.id , s. NAME, s.mobile, p.class_type_name, m.name, str_to_date(p.apply_time,'%Y-%m-%d'), p.updator) 
		from student AS s ,student_pay_master AS p , student_pay_slave AS l ,class_module_no as m
		where s.id = p.stu_id  and p.origin_type=0 and p.id = l.pay_master_id and m.id=l.resource_id  and 
		s.delete_flag = 0 AND p.delete_flag = 0 AND p.item_one_id =#{itemOneId} and p.school_id=#{schoolId} and s.company_id=#{companyId}
		<if test="itemSecondId != null and itemSecondId != ''">and p.item_second_id=#{itemSecondId}</if>
		<if test="nname != null and nname != ''">and m.name like '%${nname}%'</if>
		<if test="npublishStatus != null and npublishStatus != ''">and m.publish_status =#{npublishStatus}</if>
		limit 1
	</select>
	<select id="queryList"  resultMap="studentResultMap"  parameterType="com.yuxin.wx.model.student.Student">
		select s.id,s.name,s.mobile,s.sex,s.age,s.education_code,s.home_phone,s.hk_address,s.user_id,c.id company_id 
		from student as s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where delete_flag=0  and c.id=#{companyId}
		<if test="mobile != null and mobile != ''"> and s.mobile=#{mobile}</if>
		<if test="userId != null"> and s.user_id=#{userId}</if>
		<if test="name != null and name != ''">and s.name like '%${name}%'</if>
		<if test="identityId != null and identityId != ''"> and s.identity_id =#{identityId}</if>
		<if test="email != null and email != ''"> and s.email =#{email}</if>
		limit #{firstIndex},#{pageSize}
	</select>
	<select id="queryCount" resultType="int"  parameterType="com.yuxin.wx.model.student.Student">
		select count(s.id) from student as s 
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where delete_flag=0  and c.id=#{companyId}
		<if test="mobile != null and mobile != ''"> and s.mobile=#{mobile}</if>
		<if test="name != null and name != ''">and s.name like '%${name}%'</if>
		<if test="identityId != null and identityId != ''"> and s.identity_id =#{identityId}</if>
		limit 1
	</select>
	
	<select id="queryByCode"  resultMap="studentResultMap"  parameterType="com.yuxin.wx.model.student.Student">
		select <include refid="table_columns" /> from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where name=#{name} and identity_id=#{identityId} and delete_flag=0  and c.id=#{companyId} limit 1
	</select>
	
	<select id="queryByCode2"  resultMap="studentResultMap"  parameterType="hashmap">
		select <include refid="table_columns_s" /> from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where  identity_id=#{identityId} and delete_flag=0  and c.id=#{companyId} limit 0,1
	</select>
		
	<select id="findMessageByMobile" parameterType="map" resultMap="studentResultMap">
		select 
			a.*,
			u.username,
			u.teacher_flag as teacherFlag
		from student a 
		inner join company c on c.is_area=0 or c.is_area=1 and a.edu_area=c.edu_area_school or c.is_area=2 and a.edu_area_school=s.edu_school
		LEFT JOIN users_front u on a.user_id=u.id
		where 
			a.delete_flag=0
		and
			c.id=#{companyId}
		and 
		   (a.mobile=#{mobile} or u.username=#{mobile})
		limit 0,1
	</select>
	<select id="queryByMobile"  resultMap="studentResultMap"  parameterType="com.yuxin.wx.model.student.Student">
		select <include refid="table_columns" /> 
		from student where  delete_flag=0 and mobile=#{mobile} and is_in_school=1 limit 0,1
	</select>
	<select id="queryByUsername"  resultMap="studentResultMap"  parameterType="com.yuxin.wx.model.student.Student">
		select <include refid="table_columns" /> 
		from student 
		where  delete_flag=0  and user_id=(select id from users_front where username=#{username}) 
	</select>
	<select id="queryByIdentityId" resultMap="studentResultMap" parameterType="com.yuxin.wx.model.student.Student">
		select <include refid="table_columns" /> 
		from student 
		where  delete_flag=0  and company_id=#{companyId} and identity_id=#{identityId}  limit 0,1
	</select>
	<!-- 根据 分校 id 查询 人数 -->
	<select id="findCountBySchoolId" parameterType="Integer" resultType="Integer">
		select count(s.id)
		from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		inner join sys_config_school scs on scs.company_id=c.id
		where scs.id = #{schoolId}
	</select>
	
	<select id="findStuByNoId" parameterType="com.yuxin.wx.vo.student.StuVo" resultMap="stuVoResultMap">
		
		select b.id,
				m.apply_time,
				m.class_type_name,
				b.name,
				b.mobile,
				m.apply_channel_code
		from student_pay_slave s
		inner join student_pay_master m on s.pay_master_id = m.id and m.origin_type=0 
		inner join student b on b.id = s.stu_id
		where s.resource_id = #{resourceId} 
		 and (m.pay_status_code='ORDER_PAID' or m.pay_status_code='ORDER_PART_PAY' or m.pay_status_code='ORDER_FINISHED' or m.pay_status_code='ORDER_PAID_NO_COURSE')
		 and m.company_id = #{companyId} and 
		 	m.school_id = #{schoolId} and 
			m.delete_flag = 0
		order by b.id
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="findCountByNoId" parameterType="com.yuxin.wx.vo.student.StuVo" resultType="Integer">
		select count(b.id)
		from student_pay_slave s
		inner join student_pay_master m 
			on s.pay_master_id = m.id and m.origin_type=0 
		inner join student b on b.id = s.stu_id
		where s.resource_id = #{resourceId} 
		 and (m.pay_status_code='ORDER_PAID' or m.pay_status_code='ORDER_PART_PAY' or m.pay_status_code='ORDER_FINISHED' or m.pay_status_code='ORDER_PAID_NO_COURSE')
		 and m.company_id = #{companyId} and 
		 	m.school_id = #{schoolId} and 
			m.delete_flag = 0
	</select>
	
	<!-- 查询学员 -->
	<select id="findByPayMaster" resultMap="studentResultMap" parameterType="com.yuxin.wx.model.company.CompanyStudentMessage">
		select c.id,
			c.name,
			c.mobile,
			c.user_id,
			c.email
		from (
			select s.id,
				s.name,
				s.mobile,
				s.user_id,
				s.email
			from student s
			inner join student_pay_master m
				on s.id = m.stu_id and m.origin_type=0 
				LEFT JOIN  class_type ct ON  ct.id = m.commodity_id  and ct.origin_type=0
		    inner join users_front u on u.id = s.user_id
			where m.school_id = #{schoolId} and 
				m.company_id = #{companyId} and
				ct.item_one_code = #{itemOneCode} and
				ct.item_second_code = #{itemSecondCode} and
				ct.item_third_code = #{itemThirdCode} and
				m.commodity_id = #{classTypeId} and
				<if test="isWxOpen == 1">u.wx_open_id is not null and u.wx_open_id !=''</if>
				and m.delete_flag = 0 and m.commodity_type='COMMODITY_CLASS'
				and (m.pay_status_code='ORDER_PAID' or m.pay_status_code='ORDER_PART_PAY' or m.pay_status_code='ORDER_FINISHED' or m.pay_status_code='ORDER_PAID_NO_COURSE')
			group by s.id
		) c
	</select>
	
	<select id="findByPaySlave" resultMap="studentResultMap" parameterType="com.yuxin.wx.model.company.CompanyStudentMessage">
		select c.id,
			c.name,
			c.mobile,
			c.user_id,
			c.email
		from(
			select s.id,
				s.name,
				s.mobile,
				s.user_id,
				s.email
			from student s
			inner join student_pay_slave l
				on l.stu_id = s.id
			inner join student_pay_master m
				on l.pay_master_id = m.id and m.origin_type=0 
			where m.school_id = #{schoolId} and 
				m.company_id = #{companyId} and 
				l.resource_id = #{moduleNoId} and 
				m.item_one_id = #{itemOneId} and 
				m.item_second_id = #{itemSecondId} and 
				m.delete_flag = 0
				and (m.pay_status_code='ORDER_PAID' or m.pay_status_code='ORDER_PART_PAY' or m.pay_status_code='ORDER_FINISHED' or m.pay_status_code='ORDER_PAID_NO_COURSE')
			group by m.stu_id
		) c
	</select>
	
	<select id="findByPhone" resultMap="studentResultMap" parameterType="map">
		select s.id,
			s.name,
			s.mobile,
			s.user_id
		from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where mobile = #{phone} and c.id = #{companyId}
		order by s.id desc
		limit 0,1
	</select>
	<select id="findByUserId" resultMap="studentResultMap" parameterType="Integer">
		select <include refid="table_columns" />   
		from student  where user_id = #{id}
	</select>
	
	<!-- 插入用户消息 -->
	<!-- 查询多课程支持功能 -->
	<select id="findClassMore" parameterType="map" resultType="Integer">
		select status
		from company_function_set
		where company_id = #{companyId} and
			function_code = #{functionCode}
	</select>
	
	<!-- 学员列表功能 -->
	<select id="queryStudentsList" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
		select  s.id,s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,c.id company_id,s.province,s.city,s.county,s.address_detail,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,c.id company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount,u.member_id,u.member_level,u.member_buy_length,u.member_status,
	ccpo.name as proxyOrgName,s.edu_identity,d.item_value as edu_area,d1.item_value as edu_school,d2.item_value as edu_step,s.edu_year,
		s.edu_class,u.teacher_flag as teacherFlag
		from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0  
	 LEFT JOIN users_front u on s.user_id=u.id
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 inner join sys_config_school scs on scs.company_id=c.id
	 left join company_config_proxy_org ccpo on ccpo.id= s.proxy_org_id
	 LEFT JOIN sys_config_dict d ON d.item_code = s.edu_area
	 LEFT JOIN sys_config_dict d1 ON d1.item_code = s.edu_school
	 LEFT JOIN sys_config_dict d2 ON d2.item_code = s.edu_step
	 where 1=1 and s.is_in_school=1
	 <if test="eduArea != null and eduArea != ''">and s.edu_area=#{eduArea}</if>
	 <if test="eduSchool != null and eduSchool != ''">and s.edu_school=#{eduSchool}</if>
	 <if test="renke != null and renke != ''">
	 	and  
	 	<foreach item="renke" collection="renke" open="(" separator="or" close=")">
			(s.edu_step=#{renke.eduStep} and s.edu_year=#{renke.eduYear} and s.edu_class=#{renke.eduClass})
		</foreach>
	 </if>
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="classTypeId != null and classTypeId != ''">and sp.commodity_id = #{classTypeId} and sp.delete_flag = 0</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="isMember != null and isMember==1">
	 		and u.member_status=1 and (u.member_buy_length>0 || u.member_buy_length=-1)
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	  <if test="province != null and province != ''">and province='${province}'</if>
	  <if test="city != null and city != ''">and city= '${city}'</if>
	  <if test="county != null and county != ''">and county= '${county}'</if>
	  <if test="groupOneId != null and groupOneId != ''">and group_one_id= '${groupOneId}'</if>
	  <if test="groupTwoId != null and groupTwoId != ''">and group_two_id= '${groupTwoId}'</if>
	  <if test="proxyOrgName != null and proxyOrgName != ''">and ccpo.name like '%${proxyOrgName}%'</if>
	  <if test="proxyOrgId != null and proxyOrgId != ''">and s.proxy_org_id= #{proxyOrgId}</if>
		<if test="eduArea != null and eduArea != ''">and s.edu_area= #{eduArea}</if>
		<if test="eduSchool != null and eduSchool != ''">and s.edu_school= #{eduSchool}</if>
		<if test="isStu != null and isStu == 1"> and edu_identity = 0 AND IFNULL(u.`teacher_flag`,0) != 1</if>
		<if test="eduYear !=null and eduYear != ''">and edu_year = #{eduYear}</if>
		<if test="eduClass !=null and eduClass != ''">and edu_class = #{eduClass}</if>
		<if test="eduStep !=null and eduStep !=''">and edu_step = #{eduStep}</if>
		GROUP by s.id
	 order by s.id DESC
	limit #{firstIndex},#{pageSize}

<!--
		left join (
		select stu_id,
		is_Agent
		from student_pay_master
		where (pay_status_code='ORDER_PAID' or pay_status_code='ORDER_PART_PAY' or pay_status_code='ORDER_FINISHED' or pay_status_code='ORDER_PAID_NO_COURSE') and delete_flag=0
		and is_Agent = 1 and commodity_type= 'COMMODITY_CLASS'
		GROUP BY stu_id
		) as agent on agent.stu_id = s.id
		left join (
		select stu_id,
		"1" as Ispay
		from student_pay_master
		where pay_status_code='ORDER_PART_PAY' and delete_flag=0
		and commodity_type= 'COMMODITY_CLASS'
		GROUP BY stu_id
		) as agent2 on agent.stu_id = s.id
		-->
	</select>

	<select id="queryStudentsListCount" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultType="int">
		select count(DISTINCT(s.id))
	 from student s
	LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0 
	LEFT JOIN users_front u on s.user_id=u.id
	inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	inner join sys_config_school scs on scs.company_id=c.id
	 left join company_config_proxy_org ccpo on ccpo.id= s.proxy_org_id
	 where 1=1 and s.is_in_school=1
	 <if test="eduArea != null and eduArea != ''">and s.edu_area=#{eduArea}</if>
	 <if test="eduSchool != null and eduSchool != ''">and s.edu_school=#{eduSchool}</if>
	 <if test="renke != null and renke != ''">
	 	and  
	 	<foreach item="renke" collection="renke" open="(" separator="or" close=")">
			(s.edu_step=#{renke.eduStep} and s.edu_year=#{renke.eduYear} and s.edu_class=#{renke.eduClass})
		</foreach>
	 </if>
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="classTypeId != null and classTypeId != ''">and sp.commodity_id = #{classTypeId}</if>
	<if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	  <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="isMember != null and isMember==1">
	 		and u.member_status=1 and (u.member_buy_length>0 || u.member_buy_length=-1)
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	  <if test="province != null and province != ''">and province='${province}'</if>
	  <if test="city != null and city != ''">and city= '${city}'</if>
	  <if test="county != null and county != ''">and county= '${county}'</if>
	  <if test="groupOneId != null and groupOneId != ''">and group_one_id= '${groupOneId}'</if>
	  <if test="groupTwoId != null and groupTwoId != ''">and group_two_id= '${groupTwoId}'</if>
	   <if test="proxyOrgName != null and proxyOrgName != ''">and ccpo.name like '%${proxyOrgName}%'</if>
	  <if test="proxyOrgId != null and proxyOrgId != ''">and s.proxy_org_id= #{proxyOrgId}</if>
		<if test="eduArea != null and eduArea != ''">and s.edu_area= #{eduArea}</if>
		<if test="eduSchool != null and eduSchool != ''">and s.edu_school= #{eduSchool}</if>
		<if test="isStu != null and isStu == 1"> and edu_identity = 0 AND IFNULL(u.`teacher_flag`,0) != 1</if>
		<if test="eduStep != null and eduStep != ''"> and edu_step = #{eduStep}</if>
		<if test="eduYear != null and eduYear != ''"> and edu_year = #{eduYear}</if>
		<if test="eduClass != null and eduClass != ''"> and edu_class = #{eduClass}</if>
	</select>
	
	
	
	
	<!-- 学员列表功能 -->
	<select id="queryNewStudentsList" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
		select  s.id,s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,company_id,s.province,s.city,s.county,s.address_detail,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,c.id company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount,u.member_id,u.member_level,u.member_buy_length,u.member_status,
	ccpo.name as proxyOrgName,s.edu_identity,d.item_value as edu_area,d1.item_value as edu_school,d2.item_value as edu_step,s.edu_year,
		s.edu_class,u.teacher_flag as teacherFlag
		from student s 
		LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0  
		LEFT JOIN users_front u on s.user_id=u.id
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		inner join sys_config_school scs on scs.company_id=c.id
	 left join company_config_proxy_org ccpo on ccpo.id= s.proxy_org_id
	 LEFT JOIN sys_config_dict d ON d.item_code = s.edu_area
	 LEFT JOIN sys_config_dict d1 ON d1.item_code = s.edu_school
	 LEFT JOIN sys_config_dict d2 ON d2.item_code = s.edu_step
	 where 1=1
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="classTypeId != null and classTypeId != ''">and sp.commodity_id = #{classTypeId} and sp.delete_flag = 0</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="isMember != null and isMember==1">
	 		and u.member_status=1 and (u.member_buy_length>0 || u.member_buy_length=-1)
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	  <if test="province != null and province != ''">and province='${province}'</if>
	  <if test="city != null and city != ''">and city= '${city}'</if>
	  <if test="county != null and county != ''">and county= '${county}'</if>
	  <if test="groupOneId != null and groupOneId != ''">and group_one_id= '${groupOneId}'</if>
	  <if test="groupTwoId != null and groupTwoId != ''">and group_two_id= '${groupTwoId}'</if>
	  <if test="proxyOrgName != null and proxyOrgName != ''">and ccpo.name like '%${proxyOrgName}%'</if>
	  <if test="proxyOrgId != null and proxyOrgId != ''">and s.proxy_org_id= #{proxyOrgId}</if>
		<if test="eduArea != null and eduArea != ''">and s.edu_area= #{eduArea}</if>
		<if test="eduSchool != null and eduSchool != ''">and s.edu_school= #{eduSchool}</if>
		<if test="isStu != null and isStu == 1"> and edu_identity = 0 AND IFNULL(u.`teacher_flag`,0) != 1</if>
		<if test="eduYear !=null and eduYear != ''">and edu_year = #{eduYear}</if>
		<if test="eduClass !=null and eduClass != ''">and edu_class = #{eduClass}</if>
		<if test="eduStep !=null and eduStep !=''">and edu_step = #{eduStep}</if>
		GROUP by s.id
	 order by s.id DESC
	limit #{firstIndex},#{pageSize}
	</select>

	<select id="queryNewStudentsListCount" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultType="int">
		select count(DISTINCT(s.id))
	 from student s
	inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	inner join sys_config_school scs on scs.company_id=c.id
	LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0 
	LEFT JOIN users_front u on s.user_id=u.id
	 left join company_config_proxy_org ccpo on ccpo.id= s.proxy_org_id
	 where 1=1
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="classTypeId != null and classTypeId != ''">and sp.commodity_id = #{classTypeId}</if>
	<if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	  <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="isMember != null and isMember==1">
	 		and u.member_status=1 and (u.member_buy_length>0 || u.member_buy_length=-1)
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	  <if test="province != null and province != ''">and province='${province}'</if>
	  <if test="city != null and city != ''">and city= '${city}'</if>
	  <if test="county != null and county != ''">and county= '${county}'</if>
	  <if test="groupOneId != null and groupOneId != ''">and group_one_id= '${groupOneId}'</if>
	  <if test="groupTwoId != null and groupTwoId != ''">and group_two_id= '${groupTwoId}'</if>
	   <if test="proxyOrgName != null and proxyOrgName != ''">and ccpo.name like '%${proxyOrgName}%'</if>
	  <if test="proxyOrgId != null and proxyOrgId != ''">and s.proxy_org_id= #{proxyOrgId}</if>
		<if test="eduArea != null and eduArea != ''">and s.edu_area= #{eduArea}</if>
		<if test="eduSchool != null and eduSchool != ''">and s.edu_school= #{eduSchool}</if>
		<if test="isStu != null and isStu == 1"> and edu_identity = 0 AND IFNULL(u.`teacher_flag`,0) != 1</if>
		<if test="eduStep != null and eduStep != ''"> and edu_step = #{eduStep}</if>
		<if test="eduYear != null and eduYear != ''"> and edu_year = #{eduYear}</if>
		<if test="eduClass != null and eduClass != ''"> and edu_class = #{eduClass}</if>
	</select>
	
	
	
	
	
	
	
	
	
	<select id="queryStudentsList1" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
		select s.id,s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,c.id company_id,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,c.id company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount
	 from student s 
	 LEFT JOIN users_front u on s.user_id=u.id
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 inner join sys_config_school scs on scs.company_id=c.id
	 where c.id=#{companyId}
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and (s.create_time <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and s.create_time <![CDATA[<=]]> '${endTime}'</if>
	 <if test="userId != null">and s.creator = #{userId})</if>
	 <if test="stusMobile != null and stusMobile != ''">or s.mobile in(${stusMobile})</if>
	 <if test="eduYear !=null and eduYear != ''">and edu_year = #{eduYear}</if>
	 <if test="eduClass !=null and eduClass != ''">and edu_class = #{eduClass}</if>
	 <if test="eduStep !=null and eduStep !=''">and edu_step = #{eduStep}</if>
	 order by s.id DESC
	limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="queryStudentsListCount1" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultType="int">
		select count(s.id)
	 from student s 
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 inner join sys_config_school scs on scs.company_id=c.id
	 LEFT JOIN users_front u on s.user_id=u.id
	 where c.id=#{companyId}
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	<if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	  <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and (s.create_time <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and s.create_time <![CDATA[<=]]> '${endTime}'</if>
	  <if test="userId != null">and s.creator = #{userId})</if>
	   <if test="stusMobile != null and stusMobile != ''">or s.mobile in(${stusMobile})</if>
	</select>
	
	<!-- 查询当前公司最后一个学员的id -->
	<select id="queryMaxIdByCompany" resultType="Integer" parameterType="Integer">
		select max(id)
		from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where c.id=#{companyId} 
	</select>
	
	<!-- 查询导入成功后的学员 -->
	<select id="queryImportStudentsBycondition" resultMap="studentResultMap" parameterType="map">
		select <include refid="table_columns_s" /> 
		from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where  delete_flag=0  and c.id=#{companyId} 
		<if test="id != null">and s.id > #{id}</if>
	</select>
	
	<!-- 课程下学员管理 -->
	<select id="queryStudentsListByClassTypeId" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
		select DISTINCT(s.id),s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,<if test="protocolConfig == 1">cpur.potocol_id as protocol_id,</if>
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,c.id company_id,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,#{companyId} company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount,sp.is_agent as isAgent,
	(max(sp.apply_time)) AS signUpTime,
	(select MAX(login_time) from users_front_login_session where user_id = u.id) as lastLoginTime
	 from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id  and sp.origin_type=0 
	 LEFT JOIN users_front u on s.user_id=u.id
	 left join company c on (c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school) and c.id=#{companyId}
	 left join sys_config_school scs on scs.company_id=c.id
	 <if test="protocolConfig == 1">left JOIN course_potocol_user_relation cpur ON (cpur.course_id = sp.commodity_id and cpur.user_id = u.id)</if>
	 where sp.company_id=#{companyId} and sp.commodity_id=#{classTypeId} and (sp.pay_status_code='ORDER_PAID' or sp.pay_status_code='ORDER_PART_PAY' or sp.pay_status_code='ORDER_FINISHED' or sp.pay_status_code='ORDER_PAID_NO_COURSE' ) and sp.delete_flag=0 and sp.commodity_type='COMMODITY_CLASS'
	 <if test="protocolConfig == 1 and protocolStatus == 1"> and cpur.id is not null</if>
	 <if test="protocolConfig == 1 and protocolStatus == 2"> and cpur.id is null</if>
	 <if test="schoolId != null">and sp.school_id=#{schoolId}</if>
	  <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	  <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	 group by s.id
	 order by signUpTime DESC
	limit #{firstIndex},#{pageSize}
	</select>
	
	
	
	<select id="queryStudentsListCountByClassId" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultType="int">
		select count(DISTINCT(s.id))
	 from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id  and sp.origin_type=0 
	 LEFT JOIN users_front u on s.user_id=u.id
	 <if test="protocolConfig == 1">left JOIN course_potocol_user_relation cpur ON (cpur.course_id = sp.commodity_id and cpur.user_id = u.id)</if>
	 where sp.company_id=#{companyId} and sp.commodity_id=#{classTypeId} and (sp.pay_status_code='ORDER_PAID' or sp.pay_status_code='ORDER_PART_PAY' or sp.pay_status_code='ORDER_FINISHED' or sp.pay_status_code='ORDER_PAID_NO_COURSE') and sp.delete_flag=0 and sp.commodity_type='COMMODITY_CLASS' 
	 <if test="protocolConfig == 1 and protocolStatus == 1"> and cpur.id is not null</if>
	 <if test="protocolConfig == 1 and protocolStatus == 2"> and cpur.id is null</if>
	 <if test="schoolId != null">and sp.school_id=#{schoolId}</if>
	  <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	 <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	<if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	  <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	</select>
	
	
	<select id="queryStudentsListByClassTypeId2" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
	select DISTINCT(s.id),u.status 
	 from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0  
	 LEFT JOIN users_front u on s.user_id=u.id
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 where c.id=#{companyId} and sp.commodity_id=#{classTypeId} and (sp.pay_status_code='ORDER_PAID' or sp.pay_status_code='ORDER_PART_PAY' or sp.pay_status_code='ORDER_FINISHED' or sp.pay_status_code='ORDER_PAID_NO_COURSE' or sp.pay_status_code='ORDER_CREATED') and sp.delete_flag=0 and sp.commodity_type='COMMODITY_CLASS' 
	 order by s.id DESC
	</select>
	
	<!-- 批量导入学员 -->
	<select id="queryStudentsList2" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
		select s.id,s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,c.id company_id,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,c.id company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount
	 from student s 
	 LEFT JOIN users_front u on s.user_id=u.id
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 inner join sys_config_school scs on scs.company_id=c.id
	 where c.id=#{companyId}
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name = #{name}</if>
	 <if test="mobile != null and mobile != ''">and s.mobile = #{mobile}</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id = #{identityId}</if>
	 <if test="startTime != null and startTime != ''">and (s.create_time <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and s.create_time <![CDATA[<=]]> '${endTime}'</if>
	 <if test="userId != null">and s.creator = #{userId})</if>
	 <if test="stusMobile != null and stusMobile != ''">or (c.id=#{companyId} and (s.mobile in(${stusMobile}) or u.username in(${stusMobile})))</if>
	 order by s.id DESC
	</select>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentClassLeanRecordVo" id="studentLeanRecord">
	<result property="name" column="name" />
	<result property="registTime" column="regist_time" />
	<result property="applyTime" column="apply_time" />
	<result property="questionNum" column="questionNum" />
	<result property="evaluateNum" column="evaluateNum" />
	</resultMap>
	<!-- 学员的注册时间、 -->
	<select id="queryStudentLeanRecord" parameterType="map" resultMap="studentLeanRecord">
		select a.`name`,DATE_FORMAT(b.regist_time,'%Y-%m-%d %H:%i:%s') as regist_time
		from student a LEFT JOIN users_front b
		on a.user_id = b.id
		WHERE a.id = #{stuId}
	</select>
	<!-- 、课程购买时间 -->
	<select id="queryStudentBaomingTime" parameterType="map" resultType="String">
		SELECT DATE_FORMAT(MIN(a.apply_time),'%Y-%m-%d %H:%i:%s') as apply_time
		FROM student_pay_master a
		WHERE a.commodity_id = #{classTypeId} and a.commodity_type='COMMODITY_CLASS'  and a.origin_type=0 
		and a.stu_id = #{stuId}
		GROUP BY a.commodity_id;
	</select>
	<!-- 学习课程的提问次数统计 -->
	<select id="queryStudentQuestionCount" parameterType="map" resultType="int">
		SELECT IFNULL(COUNT(a.id),0)
		FROM student a INNER JOIN users_front b
		ON a.user_id = b.id
		INNER JOIN question c
		ON b.id = c.user_id
		where a.id = #{stuId}
		and c.course_id = #{classTypeId}
		group by c.course_id;
	</select>
	<!-- 、评论次数统计 -->
	<select id="queryStudentCommentCount" parameterType="map" resultType="int">
		SELECT IFNULL(COUNT(a.id),0)
		FROM student a INNER JOIN users_front b
		on a.user_id = b.id
		INNER JOIN video_course_comment c
		ON b.id = c.user_id  and c.origin_type=0
		where a.id = #{stuId}
		and c.class_type_id = #{classTypeId}
		group by c.class_type_id;
	</select>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" id="queryStudentClassLeanRecordMap">
		<result property="classTypeName" column="class_type_name"/>
		<result property="id" column="lec_les_id"/>
		<result property="lectureName" column="lecture_name"/>
		<result property="teachMethod" column="item_value"/>
		<result property="studyTime" column="last_lean_time"/>
		<result property="count" column="lean_count"/>
		<result property="studyStatus" column="study_status"/>
		<result property="lastTimeLone" column="study_length"/>
		<result property="type" column="type"/>
	</resultMap>
	<!-- 1.1版型  单班号-查看学员在某课程下的直播或者面授以及视频的课次学习记录 -->
	<select id="queryStudentClassLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
		select * from (
			SELECT DISTINCT f.id AS lec_les_id,f.lecture_name,g.item_value,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(1) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						AND a.class_type_id = #{classTypeId}
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type
			FROM class_type a
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE  a.id = #{classTypeId}  and a.origin_type=0
		)lec
		UNION All
		select * from (
			SELECT DISTINCT e.id,e.lesson_name,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
							ELSE '旷课' END)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '已完成'
							ELSE '未完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN
				(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
				THEN e.lesson_hour
				ELSE 0
				END)as study_length,
				'lession' AS type
			FROM class_type a
			INNER JOIN class_type_module_relation b
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN class_module_no d
			ON c.id = d.module_id
			INNER JOIN class_module_lesson e
			ON d.id = e.module_no_id
			INNER JOIN sys_config_dict f
			ON f.item_code = c.teach_method
			WHERE a.id=#{classTypeId}  and a.origin_type=0
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentClassLeanRecordCount" parameterType="map" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count(DISTINCT f.id) as id
			FROM class_type a
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			LEFT JOIN user_history h
			ON h.lecture_id = f.id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE h.user_id =	(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
			AND h.class_type_id = #{classTypeId}  and a.origin_type=0
			UNION All
			SELECT count(DISTINCT e.id) as id
			FROM class_type a
			INNER JOIN class_type_module_relation b
			ON a.id = b.class_type_id
			LEFT JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN class_module_no d
			ON c.id = d.module_id
			LEFT JOIN class_module_lesson e
			ON d.id = e.module_no_id
			INNER JOIN sys_config_dict f
			ON f.item_code = c.teach_method
			INNER JOIN company_live_static_detail g
			ON e.id = g.class_lesson_id
			WHERE g.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
			and a.id=#{classTypeId}  and a.origin_type=0
		)a
	</select>
	<!-- 1.2版型  多班号-查看学员在某课程下的直播或者面授以及视频的课次学习记录 -->
	<select id="queryStudentMoreClassLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
		select * from (
			SELECT DISTINCT f.id AS lec_les_id,f.lecture_name,g.item_value,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(*) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						AND a.class_type_id = #{classTypeId}
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type
			FROM class_type a
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE  a.id = #{classTypeId}  and a.origin_type=0
		)lec
		UNION All
		select * from (
			SELECT DISTINCT e.id,e.lesson_name,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
							ELSE '旷课' END)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '已完成'
							ELSE '未完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN
				(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
				THEN e.lesson_hour
				ELSE 0
				END)as study_length,
				'lession' AS type
			FROM student_pay_master x
			INNER JOIN student_pay_slave b
			ON x.id = b.pay_master_id
			INNER JOIN class_module_lesson e
			ON b.resource_id = e.id
			INNER JOIN sys_config_dict f
			ON f.item_code = b.resource_type
			WHERE x.company_id = #{companyId}  and x.origin_type=0 AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classTypeId} AND x.commodity_type = 'COMMODITY_CLASS' AND b.slave_status_code='SUB_ORDER_FINISHED'
			AND (b.resource_type = 'TEACH_METHOD_LIVE' or 'TEACH_METHOD_FACE')
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentMoreClassLeanRecordCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count(DISTINCT f.id) as id
			FROM class_type a
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			LEFT JOIN user_history h
			ON h.lecture_id = f.id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE h.user_id =	(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
			AND h.class_type_id = #{classTypeId}  and a.origin_type=0
			UNION All
			SELECT count(DISTINCT e.id) as id
			FROM student_pay_master x
			INNER JOIN student_pay_slave b
			ON x.id = b.pay_master_id
			INNER JOIN class_module_lesson e
			ON b.resource_id = e.id
			INNER JOIN sys_config_dict f
			ON f.item_code = b.resource_type
			WHERE x.company_id = #{companyId}  and x.origin_type=0 AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classTypeId} AND x.commodity_type = 'COMMODITY_CLASS' AND b.slave_status_code='SUB_ORDER_FINISHED'
			AND (b.resource_type = 'TEACH_METHOD_LIVE' or 'TEACH_METHOD_FACE')
		)a
	</select>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentTiKuExcipseVo" id="queryStudentTikuExperiseMapper">
		<result property="startTime" column="start_time" />
		<result property="tiKuName" column="tiku_name" />
		<result property="subjectName" column="subject_name" />
		<result property="exerciseType" column="exercise_type" />
		<result property="totalTopic" column="total_topic" />
		<result property="rigCount" column="rig_count" />
		<result property="errorCount" column="error_count" />
		<result property="userDo" column="user_do" />
		
		<result property="exerciseScore" column="exercise_score" />
		<result property="exerciseId" column="exercise_id" />
	</resultMap>
	<!-- 查看学生的做题记录 -->
	<select id="queryStudentTikuExperise" parameterType="com.yuxin.wx.vo.student.StudentTiKuExcipseVo" resultMap="queryStudentTikuExperiseMapper">
		SELECT DATE_FORMAT(a.start_time,'%Y-%m-%d %H:%i:%s') as start_time,b.tiku_name,c.subject_name,g.item_value as exercise_type,a.total_topic,a.exercise_score,a.id as exercise_id,
			CASE WHEN
				a.correct_topic is NULL
			THEN
				(SELECT COUNT(1)
				FROM tiku_user_exercise x 
				INNER JOIN tiku_user_exercise_answer y
		     	on x.id = y.user_exercise_id
				WHERE 
				x.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				AND y.correct_flag = 1
				and x.id=a.id
				)
			ELSE a.correct_topic
			END as rig_count,
			CASE WHEN
				a.error_topic is NULL
			THEN
				(SELECT COUNT(1)
				FROM tiku_user_exercise x 
				INNER JOIN tiku_user_exercise_answer y
		     	on x.id = y.user_exercise_id
				WHERE 
				x.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				AND y.correct_flag = 0
				and x.id=a.id
				)
			ELSE a.error_topic
			END as error_count,
			(select count(1) from tiku_user_exercise tue,tiku_user_exercise_answer tuea where tue.id = tuea.user_exercise_id and tue.id = a.id) as user_do
		FROM tiku_user_exercise a 
		INNER JOIN tiku_category b
		ON a.category_id = b.id and b.origin_type=0 
		INNER JOIN tiku_subject c
		ON a.subject_id = c.id
		INNER JOIN sys_config_dict g
		ON a.exercise_type = g.item_code
		WHERE a.user_id = (select b.id FROM users_front b INNER JOIN student a ON b.id = a.user_id WHERE a.id = #{stuId})
		AND a.company_id = #{companyId}
		<if test="tiKuName != null and tiKuName != ''">and a.category_id=#{tiKuName}</if>
		<if test="subjectName != null and subjectName != ''">and a.subject_id=#{subjectName}</if>
		<if test="startTime != null and startTime != ''">and date_format(a.start_time,"%Y-%m-%d") <![CDATA[=]]> '${startTime}'</if>
		<if test="exerciseType != null and exerciseType != ''">and a.exercise_type=#{exerciseType}</if>
		ORDER BY a.start_time desc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentTikuExperiseCount" parameterType="com.yuxin.wx.vo.student.StudentTiKuExcipseVo" resultType="int">
		SELECT count(1)
		FROM tiku_user_exercise a 
		INNER JOIN tiku_category b
		ON a.category_id = b.id and b.origin_type=0 
		INNER JOIN tiku_subject c
		ON a.subject_id = c.id
		INNER JOIN sys_config_dict g
		ON a.exercise_type = g.item_code
		WHERE a.user_id = (select b.id FROM users_front b INNER JOIN student a ON b.id = a.user_id WHERE a.id = #{stuId})
		AND a.company_id = #{companyId}
		<if test="tiKuName != null and tiKuName != ''">and a.category_id=#{tiKuName}</if>
		<if test="subjectName != null and subjectName != ''">and a.subject_id=#{subjectName}</if>
		<if test="startTime != null and startTime != ''">and date_format(a.start_time,"%Y-%m-%d") <![CDATA[=]]> '${startTime}'</if>
		<if test="exerciseType != null and exerciseType != ''">and a.exercise_type=#{exerciseType}</if>
	</select>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentTiKuOrSubjectVo" id="studentTiKuOrSubjectMapper">
	<result property="id" column="id" />
	<result property="name" column="name" />
	</resultMap>
	<!-- 查询公司所有的题库 -->
	<select id="queryCommpanyTiku" parameterType="com.yuxin.wx.vo.student.StudentTiKuOrSubjectVo" resultMap="studentTiKuOrSubjectMapper">
		SELECT a.id as id,a.tiku_name as name FROM tiku_category a WHERE a.company_id = #{id} and a.origin_type=0 
	</select>
	<!-- 查询指定题库下的科目 -->
	<select id="queryCommpanySubject" parameterType="com.yuxin.wx.vo.student.StudentTiKuOrSubjectVo" resultMap="studentTiKuOrSubjectMapper">
		SELECT a.id as id,a.subject_name as name FROM tiku_subject a WHERE a.category_id = #{id}
	</select>
	
	<resultMap type="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" id="studentClassLeanDetailMapper">
		<result property="lectureName" column="lecName" />
		<result property="teachMethod" column="item_value" />
		<result property="studyTime" column="study_time" />
		<result property="lastTimeLone" column="study_length" />
	</resultMap>
	
	
	<!-- 查询视频课的学习记录详情 -->
	<select id="queryStudentLecLeanDetail" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="studentClassLeanDetailMapper">
		SELECT f.lecture_name as lecName,g.item_value,DATE_FORMAT(h.study_time,'%Y-%m-%d %H:%i:%s') as study_time,IFNULL(h.study_length,0) AS study_length
		FROM class_type a
		INNER JOIN class_type_module_relation b 
		ON a.id = b.class_type_id
		INNER JOIN class_module c
		ON b.module_id = c.id
		INNER JOIN course_video_chapter d
		ON d.module_id = c.id
		INNER JOIN course_video_lecture f
		ON d.id = f.chapter_id
		INNER JOIN user_history_all h
		ON h.lecture_id = f.id
		INNER JOIN sys_config_dict g
		ON g.item_code = c.teach_method
		WHERE h.lecture_id = #{id}
		AND h.user_id = (SELECT a.id from users_front a INNER JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})  and a.origin_type=0
		ORDER BY h.study_time desc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentLecLeanDetailCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT count(1)
		FROM class_type a
		INNER JOIN class_type_module_relation b 
		ON a.id = b.class_type_id
		INNER JOIN class_module c
		ON b.module_id = c.id
		INNER JOIN course_video_chapter d
		ON d.module_id = c.id
		INNER JOIN course_video_lecture f
		ON d.id = f.chapter_id
		INNER JOIN user_history_all h
		ON h.lecture_id = f.id
		INNER JOIN sys_config_dict g
		ON g.item_code = c.teach_method
		WHERE h.lecture_id = #{id}
		AND h.user_id = (SELECT a.id from users_front a INNER JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})  and a.origin_type=0
	</select>
	
	<!-- 查询直播课的学习记录详情 -->
	<select id="queryStudentLessLeanDetail" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="studentClassLeanDetailMapper">
		SELECT e.lesson_name as lecName,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
					ELSE 0
					END) as study_time,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN e.lesson_hour
				ELSE 0
				END)as study_length
		FROM class_module c
		INNER JOIN class_module_no d
		ON c.id = d.module_id
		INNER JOIN class_module_lesson e
		ON d.id = e.module_no_id
		INNER JOIN sys_config_dict f
		ON f.item_code = c.teach_method
		WHERE e.id = #{id}
		ORDER BY study_time desc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentLessLeanDetailCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT count(e.id)
		FROM class_module c
		INNER JOIN class_module_no d
		ON c.id = d.module_id
		INNER JOIN class_module_lesson e
		ON d.id = e.module_no_id
		INNER JOIN sys_config_dict f
		ON f.item_code = c.teach_method
		WHERE e.id = #{id}
	</select>
	<resultMap type="com.yuxin.wx.vo.student.StudentLessTimeVo" id="lessionTimeCountMap">
		<result property="lessonDate" column="lesson_date" />
		<result property="hour" column="lesson_time_end" />
		<result property="userId" column="user_id" />
		<result property="teachMethod" column="teach_method" />
	</resultMap>
	<!--课程   所有的直播/面授课次数 -->
	<select id="queryLessionCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="lessionTimeCountMap">
		SELECT DISTINCT e.id,e.lesson_date,e.lesson_time_end,c.teach_method,
		(SELECT a.user_id FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id limit 0,1) as user_id
		FROM class_type a
		INNER JOIN class_type_module_relation b ON a.id = b.class_type_id
		INNER JOIN class_module c ON b.module_id = c.id
		INNER JOIN class_module_no_onsale cmno ON cmno.module_id = c.id 
		INNER JOIN class_module_no cmn ON cmn.id = cmno.module_no_id
		INNER JOIN class_module_lesson e ON cmn.id = e.module_no_id
		WHERE a.id = #{classTypeId}  AND cmno.classtype_id = a.id and cmno.default_flag = 1
		and c.del_flag = 0 and e.del_flag = 0 and a.origin_type=0
	</select>
	<!--课程   所有的视频课次数 -->
	<select id="queryLecCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT COUNT(DISTINCT f.id)
		FROM class_type a
		INNER JOIN class_type_module_relation b 
		ON a.id = b.class_type_id
		INNER JOIN class_module c
		ON b.module_id = c.id
		INNER JOIN course_video_chapter d
		ON d.module_id = c.id
		INNER JOIN course_video_lecture f
		ON d.id = f.chapter_id
		WHERE a.id = #{classTypeId}  and a.origin_type=0
	</select>
	<!--课程   已经完成的视频课次 -->
	<select id="queryLecFinishCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT COUNT(DISTINCT f.id)
		FROM class_type a
		INNER JOIN class_type_module_relation b 
		ON a.id = b.class_type_id
		INNER JOIN class_module c
		ON b.module_id = c.id
		INNER JOIN course_video_chapter d
		ON d.module_id = c.id
		INNER JOIN course_video_lecture f
		ON d.id = f.chapter_id
		INNER JOIN user_history h
		ON h.lecture_id = f.id
		WHERE h.user_id = (SELECT a.id from users_front a INNER JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
		AND a.id = #{classTypeId}  and a.origin_type=0
		AND h.study_status = '3';
	</select>
	
	<!--课程包   所有的视频课次数 -->
	<select id="queryCpLecCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT COUNT(DISTINCT f.id)
		FROM class_package_relation k
		INNER JOIN class_type a
		ON k.class_type_id = a.id  and a.origin_type=0
		INNER JOIN class_type_module_relation b 
		ON a.id = b.class_type_id
		INNER JOIN class_module c
		ON b.module_id = c.id
		INNER JOIN course_video_chapter d
		ON d.module_id = c.id
		INNER JOIN course_video_lecture f
		ON d.id = f.chapter_id
		WHERE k.class_package_id = #{classPackageId}
		and c.del_flag= 0 and f.del_flag = 0 and f.publish_status = 'COURSE_VIDEO_PUBLISHED'
	</select>
	<!--课程包   已经完成的视频课次 -->
	<select id="queryCpLecFinishCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT COUNT(DISTINCT h.id)
		FROM class_package_relation k
		INNER JOIN class_type a ON k.class_type_id = a.id  and a.origin_type=0
		INNER JOIN class_type_module_relation b ON a.id = b.class_type_id
		INNER JOIN class_module c ON b.module_id = c.id
		INNER JOIN course_video_chapter d ON d.module_id = c.id
		INNER JOIN course_video_lecture f ON d.id = f.chapter_id
		INNER JOIN user_history h ON h.lecture_id = f.id
		INNER JOIN student i ON i.user_id = h.user_id
		WHERE i.id = #{stuId}
		AND k.class_package_id = #{classPackageId}
		AND h.study_status = '3'
		and c.del_flag= 0 and f.del_flag = 0 and f.publish_status = 'COURSE_VIDEO_PUBLISHED'
	</select>
	<!--课程包  所有的直播/面授课次数 -->
	<select id="queryCpMoreNoLessionCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="lessionTimeCountMap">
		SELECT DISTINCT e.id,e.lesson_date,e.lesson_time_end
		FROM class_package_relation h
		INNER JOIN class_type a ON h.class_type_id = a.id  and a.origin_type=0
		INNER JOIN class_type_module_relation b ON a.id = b.class_type_id
		INNER JOIN class_module c ON b.module_id = c.id
		INNER JOIN class_module_no_onsale d ON d.module_id = c.id
		INNER JOIN class_module_no cmo ON cmo.id = d.module_no_id
		INNER JOIN class_module_lesson e ON cmo.id = e.module_no_id
		WHERE h.class_package_id = #{classPackageId}
		and d.classtype_id = a.id and d.default_flag = 1
		and c.del_flag = 0 and cmo.del_flag = 0 and e.del_flag = 0;   
	</select>
	
	
	<select id="findClassPackageByCommodityId" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
	select DISTINCT(s.id),s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,<if test="protocolConfig == 1">cpur.potocol_id as protocol_id,</if>
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,c.id company_id,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,c.id company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount,sp.is_agent as isAgent,(select login_time from users_front_login_session where id=(select max(id) from users_front_login_session where user_id=u.id)) as lastLoginTime,
	(max(sp.apply_time)) AS signUpTime
	 from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0  
	 LEFT JOIN users_front u on s.user_id=u.id
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 inner join sys_config_school scs on scs.company_id=c.id
	 <if test="protocolConfig == 1">left JOIN course_potocol_user_relation cpur ON (cpur.class_package_id = sp.commodity_id and cpur.user_id = u.id)</if>
	 where c.id=#{companyId} and sp.commodity_id=#{commodityId} and sp.commodity_type='COMMODITY_PACKAGE' and (sp.pay_status_code='ORDER_PAID' or sp.pay_status_code='ORDER_PART_PAY' or sp.pay_status_code='ORDER_FINISHED' or sp.pay_status_code='ORDER_PAID_NO_COURSE') and sp.delete_flag=0
	 <if test="protocolConfig == 1 and protocolStatus == 1"> and cpur.id is not null</if>
	 <if test="protocolConfig == 1 and protocolStatus == 2"> and cpur.id is null</if>
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like  '%${mobile}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	 group by s.id
	 order by signUpTime DESC
	limit #{firstIndex},#{pageSize}
		
	</select>
	<select id="findCountByCommodityId" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultType="int">
		select count(DISTINCT(s.id))
	 from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id and sp.origin_type=0 
	 LEFT JOIN users_front u on s.user_id=u.id
	 inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 inner join sys_config_school scs on scs.company_id=c.id
	 <if test="protocolConfig == 1">left JOIN course_potocol_user_relation cpur ON (cpur.class_package_id = sp.commodity_id and cpur.user_id = u.id)</if>
	 where c.id=#{companyId} and sp.commodity_id=#{commodityId} and sp.commodity_type='COMMODITY_PACKAGE' and (sp.pay_status_code='ORDER_PAID' or sp.pay_status_code='ORDER_PART_PAY' or sp.pay_status_code='ORDER_FINISHED' or sp.pay_status_code='ORDER_PAID_NO_COURSE') and sp.delete_flag=0
	 <if test="protocolConfig == 1 and protocolStatus == 1"> and cpur.id is not null</if>
	 <if test="protocolConfig == 1 and protocolStatus == 2"> and cpur.id is null</if>
	 <if test="schoolId != null">and scs.id=#{schoolId}</if>
	 <if test="name != null and name != ''">and s.name = #{name}</if>
	 <if test="mobile != null and mobile != ''">and s.mobile = #{mobile}</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id = #{identityId}</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
		
	</select>
	
	<select id="findStuInfos" parameterType="map" resultMap="studentResultMap">
		select 
			<include refid="table_columns_s" />
		from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where s.delete_flag=0
		and c.id=#{companyId}
		<if test="mobile != null and mobile != ''">and s.mobile=#{mobile}</if>
		<if test="stuName != null and stuName != ''">and s.name=#{stuName}</if>
	</select>
	
	
	
	
	<!-- 课程包学习记录 -->
	
	
	
	<!-- 注册和购买课程包的时间 -->
	<select id="findClassPackInfo" resultMap="studentLeanRecord" parameterType="map">
	  select a.`name`,DATE_FORMAT(b.regist_time,'%Y-%m-%d %H:%i:%s') as regist_time
		from student a 
		INNER JOIN users_front b
		on a.user_id = b.id
		WHERE a.id=#{stuId};
	</select>
	<!-- 、课程购买时间 -->
	<select id="queryStudentCpBaomingTime" parameterType="map" resultType="String">
		SELECT DATE_FORMAT(MIN(c.apply_time),'%Y-%m-%d %H:%i:%s') as apply_time
		from student a 
		INNER JOIN users_front b
		on a.user_id = b.id
		INNER JOIN student_pay_master c
		ON a.id = c.stu_id and c.origin_type=0 
		WHERE a.id=#{stuId} and c.commodity_id = #{classPackageId} and c.commodity_type = 'COMMODITY_PACKAGE';
	</select>
	<!-- 课程包提问次数 -->
	<select id="findStuClassPackageQuesCount" resultType="int" parameterType="map">
	  select count(c.id)
		from class_package_relation a
		INNER JOIN class_type b
		ON a.class_type_id = b.id and b.origin_type=0
		INNER JOIN question c
		ON b.id = c.course_id
		INNER JOIN student d ON c.user_id = d.user_id
		where d.id = #{stuId} and a.id = #{classPackageId}  ;
	</select>
	<!-- 课程包评价次数 -->
	<select id="findStuClassPacageCommentCount" resultType="int" parameterType="map">
	  SELECT COUNT(c.id)
		from class_package_relation a
		INNER JOIN class_type b
		ON a.class_type_id = b.id and b.origin_type=0
		INNER JOIN video_course_comment c
		ON b.id = c.class_type_id and c.origin_type=0
		INNER JOIN student d
		ON d.user_id = c.user_id
		where a.id = #{stuId} and d.id = #{classPackageId} ;
	</select>
	<!-- 查看学生购买的阶段 -->
	<select id="findHasBuyStage" resultType="String" parameterType="map">
		SELECT b.class_package_stage_id FROM student_pay_master b WHERE b.stu_id = #{stuId}  and b.origin_type=0 AND b.commodity_type = 'COMMODITY_PACKAGE' AND b.commodity_id = #{classPackageId}
	</select>
	
	<!-- 单版型课程包学习记录查询 -->
	
	<!-- 1.1查看学员购买整个-课程包下的直播或者面授以及视频的课次学习记录 -->
	<select id="queryStudentCpLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
		
select * from (
			SELECT DISTINCT f.id AS lec_les_id,f.lecture_name,g.item_value,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(*) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type
			FROM class_package_relation h
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE  h.class_package_id = #{classPackageId}
		)lec
		UNION All
		select * from (
			SELECT DISTINCT e.id,e.lesson_name,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
							ELSE '旷课' END)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '已完成'
							ELSE '未完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN
				(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
				THEN e.lesson_hour
				ELSE 0
				END)as study_length,
				'lession' AS type
			FROM class_package_relation h
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN class_module_no d
			ON c.id = d.module_id
			INNER JOIN class_module_lesson e
			ON d.id = e.module_no_id
			INNER JOIN sys_config_dict f
			ON f.item_code = c.teach_method
			WHERE h.class_package_id=#{classPackageId}
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentCpLeanRecordCount" parameterType="map" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count(DISTINCT f.id) as id
			FROM class_package_relation h
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			WHERE h.class_package_id = #{classPackageId}
			
			UNION All
			
			SELECT count(DISTINCT e.id) as id
			FROM class_package_relation h
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b
			ON a.id = b.class_type_id
			LEFT JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN class_module_no d
			ON c.id = d.module_id
			LEFT JOIN class_module_lesson e
			ON d.id = e.module_no_id
			where h.class_package_id = #{classPackageId}
		)a
	</select>
	<!-- 1.2查看学员购买课程包内部分阶段-的直播或者面授以及视频的课次学习记录 -->
	<select id="queryStudentCpSomeStageLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
		
select * from (
			SELECT DISTINCT f.id AS lec_les_id,f.lecture_name,g.item_value,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(*) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type
			FROM student_pay_master x
			INNER JOIN class_package_relation h
			ON x.class_package_stage_id = h.class_package_stage_id
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE x.company_id = #{companyId}  and x.origin_type=0 AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE'
		)lec
		UNION All
		select * from (
			SELECT DISTINCT e.id,e.lesson_name,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
							ELSE '旷课' END)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '已完成'
							ELSE '未完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN
				(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
				THEN e.lesson_hour
				ELSE 0
				END)as study_length,
				'lession' AS type
			FROM student_pay_master x
			INNER JOIN class_package_relation h
			ON x.class_package_stage_id = h.class_package_stage_id
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN class_module_no d
			ON c.id = d.module_id
			INNER JOIN class_module_lesson e
			ON d.id = e.module_no_id
			INNER JOIN sys_config_dict f
			ON f.item_code = c.teach_method
			WHERE x.company_id = #{companyId} and x.origin_type=0  AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE'
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentCpSomeStageLeanRecordCount" parameterType="map" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count(DISTINCT f.id) as id
			FROM student_pay_master x
			INNER JOIN class_package_relation h
			ON x.class_package_stage_id = h.class_package_stage_id
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE x.company_id = #{companyId} and x.origin_type=0  AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE'
			
			UNION All
			
			SELECT count(DISTINCT e.id) as id
			FROM student_pay_master x
			INNER JOIN class_package_relation h
			ON x.class_package_stage_id = h.class_package_stage_id
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN class_module_no d
			ON c.id = d.module_id
			INNER JOIN class_module_lesson e
			ON d.id = e.module_no_id
			INNER JOIN sys_config_dict f
			ON f.item_code = c.teach_method
			WHERE x.company_id = #{companyId} and x.origin_type=0  AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE'
		)a
	</select>
	
	
	
	<!-- 多班号课程包学习记录查询 -->
	
	<!-- 2.1查看学员购买整个-课程包下的直播或者面授以及视频的课次学习记录 -->
	<select id="queryStudentMoreCpLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
select * from (
			SELECT DISTINCT f.id AS lec_les_id,f.lecture_name,g.item_value,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(*) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type
			FROM class_package_relation h
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE  h.class_package_id = #{classPackageId}
		)lec
		UNION All
		select * from (
			SELECT DISTINCT e.id,e.lesson_name,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
							ELSE '旷课' END)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '已完成'
							ELSE '未完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN
				(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
				THEN e.lesson_hour
				ELSE 0
				END)as study_length,
				'lession' AS type
			FROM student_pay_master x
			INNER JOIN student_pay_slave b
			ON x.id = b.pay_master_id
			INNER JOIN class_module_lesson e
			ON b.resource_id = e.id
			INNER JOIN sys_config_dict f
			ON f.item_code = b.resource_type
			WHERE x.company_id = #{companyId} and x.origin_type=0  AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE' AND b.slave_status_code='SUB_ORDER_FINISHED'
			AND (b.resource_type = 'TEACH_METHOD_LIVE' or 'TEACH_METHOD_FACE')
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentMoreCpLeanRecordCount" parameterType="map" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count( DISTINCT f.id) as id
			FROM class_package_relation h
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			WHERE h.class_package_id = #{classPackageId}
			
			UNION All
			
			SELECT count(DISTINCT e.id) as id
			FROM student_pay_master x
			INNER JOIN student_pay_slave b
			ON x.id = b.pay_master_id
			INNER JOIN class_module_lesson e
			ON b.resource_id = e.id
			INNER JOIN sys_config_dict f
			ON f.item_code = b.resource_type
			WHERE x.company_id = #{companyId}  and x.origin_type=0 AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE' AND b.slave_status_code='SUB_ORDER_FINISHED'
			AND (b.resource_type = 'TEACH_METHOD_LIVE' or 'TEACH_METHOD_FACE')
		)a
	</select>
	<!-- 2.2查看学员购买课程包内部分阶段-的直播或者面授以及视频的课次学习记录 -->
	<select id="queryStudentMoreCpSomeStageLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
		
select * from (
			SELECT DISTINCT f.id AS lec_les_id,f.lecture_name,g.item_value,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(*) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type
			FROM student_pay_master x
			INNER JOIN class_package_relation h
			ON x.class_package_stage_id = h.class_package_stage_id
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE x.company_id = #{companyId} and x.origin_type=0  AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE'
		)lec
		UNION All
		select * from (
			SELECT DISTINCT e.id,e.lesson_name,f.item_value,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')
							ELSE '旷课' END)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN 
								(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
							THEN '已完成'
							ELSE '未完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN
				(SELECT count(a.id) FROM company_live_static_detail a,student b WHERE a.user_id = b.user_id AND b.id = #{stuId} AND a.class_lesson_id = e.id) > 0
				THEN e.lesson_hour
				ELSE 0
				END)as study_length,
				'lession' AS type
			FROM student_pay_master x
			INNER JOIN student_pay_slave b
			ON x.id = b.pay_master_id
			INNER JOIN class_module_lesson e
			ON b.resource_id = e.id
			INNER JOIN sys_config_dict f
			ON f.item_code = b.resource_type
			WHERE x.company_id = #{companyId}  and x.origin_type=0 AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE' AND b.slave_status_code='SUB_ORDER_FINISHED'
			AND (b.resource_type = 'TEACH_METHOD_LIVE' or 'TEACH_METHOD_FACE')
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentMoreCpSomeStageLeanRecordCount" parameterType="map" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count(DISTINCT f.id) as id
			FROM student_pay_master x
			INNER JOIN class_package_relation h
			ON x.class_package_stage_id = h.class_package_stage_id
			INNER JOIN class_type a
			ON h.class_type_id = a.id  and a.origin_type=0
			INNER JOIN class_type_module_relation b 
			ON a.id = b.class_type_id
			INNER JOIN class_module c
			ON b.module_id = c.id
			INNER JOIN course_video_chapter d
			ON d.module_id = c.id
			INNER JOIN course_video_lecture f
			ON d.id = f.chapter_id
			INNER JOIN sys_config_dict g
			ON g.item_code = c.teach_method
			WHERE x.company_id = #{companyId}  and x.origin_type=0 AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE'
			
			UNION All
			
			SELECT count(DISTINCT e.id) as id
			FROM student_pay_master x
			INNER JOIN student_pay_slave b
			ON x.id = b.pay_master_id
			INNER JOIN class_module_lesson e
			ON b.resource_id = e.id
			INNER JOIN sys_config_dict f
			ON f.item_code = b.resource_type
			WHERE x.company_id = #{companyId} and x.origin_type=0  AND x.school_id = #{schoolId} AND x.stu_id=#{stuId} and x.commodity_id =  #{classPackageId} AND x.commodity_type = 'COMMODITY_PACKAGE' AND b.slave_status_code='SUB_ORDER_FINISHED'
			AND (b.resource_type = 'TEACH_METHOD_LIVE' or 'TEACH_METHOD_FACE')
		)a
	</select>
	
	<!-- 课程和课程包的学习记录查询 -->
	<select id="queryStudentCtOrCpLeanRecord" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultMap="queryStudentClassLeanRecordMap">
select * from (
			SELECT  f.id AS lec_les_id,f.lecture_name,g.item_value,g.item_code,
				IFNULL((SELECT DATE_FORMAT(MAX(q.study_time),'%Y-%m-%d %T') FROM user_history_all q 
						WHERE q.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId}) 
						AND q.lecture_id = f.id 
						GROUP BY q.lecture_id),0) as last_lean_time,
				IFNULL((SELECT COUNT(*) FROM user_history_all a where a.lecture_id = f.id AND a.user_id = 
						(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						GROUP BY a.lecture_id),'0') as lean_count,
				 IFNULL((SELECT a.study_status FROM user_history a WHERE a.lecture_id = f.id AND a.user_id = 
										(SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
				 ),0) as study_status,												
				IFNULL((SELECT CAST(MAX(IFNULL(a.study_length,0)) AS CHAR)
						FROM user_history_all a 
						WHERE a.user_id = (SELECT a.id from users_front a LEFT JOIN student b ON b.user_id = a.id WHERE b.id = #{stuId})
						AND a.lecture_id = f.id
						GROUP BY a.lecture_id),'0') as study_length,
				'lecture' AS type,spm.class_type_name,spm.id as apm_id
			FROM student_pay_master spm
			INNER JOIN student_pay_slave sps ON sps.pay_master_id = spm.id
			INNER JOIN course_video_chapter cvc ON cvc.module_id = sps.module_id
			INNER JOIN course_video_lecture f ON f.chapter_id = cvc.id
			INNER JOIN sys_config_dict g ON g.item_code = sps.resource_type
			WHERE spm.company_id = #{companyId} and spm.origin_type=0  AND spm.school_id = #{schoolId} AND spm.stu_id= #{stuId}
			<if test="commodityId != null and commodityId != ''">and spm.commodity_id =  #{commodityId}</if>
			AND spm.commodity_type = #{commodityType}  
			AND sps.resource_type = 'TEACH_METHOD_VIDEO' 
			and (spm.pay_status_code='ORDER_PAID' or spm.pay_status_code='ORDER_PART_PAY' or spm.pay_status_code='ORDER_FINISHED' or spm.pay_status_code='ORDER_PAID_NO_COURSE') 
			AND sps.slave_status_code!='SUB_ORDER_DELTED'
		)lec
		UNION All
		select * from (
			SELECT  e.id,e.lesson_name,f.item_value,f.item_code,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_start,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN (f.item_code = 'TEACH_METHOD_LIVE')
							THEN (CASE WHEN (select watch_type from company_live_static_record clsr where clsr.user_id = uf.id and clsr.class_lesson_id = e.id) = 0
									THEN (select DATE_FORMAT(clsr.in_time,'%Y-%m-%d %H:%i:%S') from company_live_static_record clsr where clsr.user_id = uf.id and clsr.class_lesson_id = e.id)
									ELSE '旷课' END
							)
							ELSE STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_start,':00'),'%Y-%m-%d %H:%i:%S')
							END
							)
					ELSE 0
					END) as last_lean_time,
				(CASE WHEN
					STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
					THEN (CASE WHEN 
								(select watch_type from company_live_static_record clsr where clsr.user_id = uf.id and clsr.class_lesson_id = e.id) = 0
							THEN '1'
							ELSE '0' END)
					ELSE '0'
					END) as lean_count,
				(CASE WHEN
				STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN (f.item_code = 'TEACH_METHOD_LIVE')
							THEN (CASE WHEN ((select watch_type from company_live_static_record clsr where clsr.user_id = uf.id and clsr.class_lesson_id = e.id) = 0)
										THEN '已完成'
										ELSE '未完成'
										END)
							ELSE '已完成' END)
				ELSE '未完成'
				END)as study_status ,
				(CASE WHEN STR_TO_DATE(CONCAT(DATE_FORMAT(e.lesson_date,'%Y-%m-%d'),' ',e.lesson_time_end,':00'),'%Y-%m-%d %H:%i:%S')<![CDATA[<]]>DATE_FORMAT(now(),'%Y-%m-%d %H:%i:%S')
				THEN (CASE WHEN (f.item_code LIKE 'TEACH_METHOD_LIVE')
							THEN (CASE WHEN (select watch_type from company_live_static_record clsr where clsr.user_id = uf.id and clsr.class_lesson_id = e.id) = 0
													THEN e.lesson_hour
													ELSE 0
													END)
							ELSE e.lesson_hour
							END)
				ELSE 0
				END)as study_length,
				'lession' AS type,spm.class_type_name,spm.id as apm_id
			FROM users_front uf
			inner join student s on uf.id = s.user_id 
			inner join student_pay_master spm on s.id = spm.stu_id and spm.origin_type=0 
			INNER JOIN student_pay_slave sps ON sps.pay_master_id = spm.id
			INNER JOIN class_module_no cmn ON sps.resource_id = cmn.id
			INNER JOIN class_module_lesson e ON cmn.id = e.module_no_id
			INNER JOIN sys_config_dict f ON f.item_code = sps.resource_type
			WHERE spm.company_id = #{companyId} AND spm.school_id = #{schoolId} AND spm.stu_id= #{stuId}
			<if test="commodityId != null and commodityId != ''">and spm.commodity_id =  #{commodityId}</if>
			AND spm.commodity_type = #{commodityType}
			AND (sps.resource_type = 'TEACH_METHOD_LIVE' or sps.resource_type = 'TEACH_METHOD_FACE') 
			and (spm.pay_status_code='ORDER_PAID' or spm.pay_status_code='ORDER_PART_PAY' or spm.pay_status_code='ORDER_FINISHED' or spm.pay_status_code='ORDER_PAID_NO_COURSE') 
			AND sps.slave_status_code!='SUB_ORDER_DELTED'
			and e.del_flag = 0
		)less
		ORDER BY last_lean_time desc,lec_les_id asc
		LIMIT #{firstIndex},#{pageSize}
	</select>
	<select id="queryStudentCtOrCpLeanRecordCount" parameterType="com.yuxin.wx.vo.student.StudentClassLeanDetailVo" resultType="int">
		SELECT SUM(id) FROM(
			SELECT count( spm.id) as id
			FROM student_pay_master spm
			INNER JOIN student_pay_slave sps ON sps.pay_master_id = spm.id
			INNER JOIN course_video_chapter cvc ON cvc.module_id = sps.module_id
			INNER JOIN course_video_lecture f ON f.chapter_id = cvc.id
			INNER JOIN sys_config_dict g ON g.item_code = sps.resource_type
			WHERE spm.company_id = #{companyId}  and spm.origin_type=0 AND spm.school_id = #{schoolId} AND spm.stu_id= #{stuId}
			<if test="commodityId != null and commodityId != ''">and spm.commodity_id =  #{commodityId}</if>
			AND spm.commodity_type = #{commodityType}  
			AND sps.resource_type = 'TEACH_METHOD_VIDEO' 
			and (spm.pay_status_code='ORDER_PAID' or spm.pay_status_code='ORDER_PART_PAY' or spm.pay_status_code='ORDER_FINISHED' or spm.pay_status_code='ORDER_PAID_NO_COURSE') 
			AND sps.slave_status_code!='SUB_ORDER_DELTED'
			
			UNION All
			
			SELECT count( spm.id) as id
			FROM student_pay_master spm
			INNER JOIN student_pay_slave sps ON sps.pay_master_id = spm.id
			INNER JOIN class_module_no cmn ON sps.resource_id = cmn.id
			INNER JOIN class_module_lesson e ON cmn.id = e.module_no_id
			INNER JOIN sys_config_dict f ON f.item_code = sps.resource_type
			WHERE spm.company_id = #{companyId} and spm.origin_type=0  AND spm.school_id = #{schoolId} AND spm.stu_id= #{stuId}
			<if test="commodityId != null and commodityId != ''">and spm.commodity_id =  #{commodityId}</if>
			AND spm.commodity_type = #{commodityType}
			AND (sps.resource_type = 'TEACH_METHOD_LIVE' or sps.resource_type = 'TEACH_METHOD_FACE') 
			and (spm.pay_status_code='ORDER_PAID' or spm.pay_status_code='ORDER_PART_PAY' or spm.pay_status_code='ORDER_FINISHED' or spm.pay_status_code='ORDER_PAID_NO_COURSE') 
			AND sps.slave_status_code!='SUB_ORDER_DELTED'
			and e.del_flag = 0
		)a
	</select>
	
	<select id="exportClassPackageBycommodityId" parameterType="com.yuxin.wx.vo.student.StudentListVo" resultMap="studentsListMap">
	select DISTINCT(s.id),s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.delete_flag,scs.id school_id,c.id company_id,u.id as userId,u.username,u.mobile,u.email,scs.id school_id,
	u.status,c.id company_id,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount,sp.is_agent as isAgent,(select login_time from users_front_login_session where id=(select max(id) from users_front_login_session where user_id=u.id)) as lastLoginTime
	 from student s 
	 LEFT JOIN student_pay_master sp on s.id=sp.stu_id  and sp.origin_type=0 
	 LEFT JOIN users_front u on s.user_id=u.id
	 left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
	 left join sys_config_school scs on scs.company_id=c.id
	 where c.id=#{companyId} and sp.commodity_id=#{commodityId} and sp.commodity_type='COMMODITY_PACKAGE' and (sp.pay_status_code='ORDER_PAID' or sp.pay_status_code='ORDER_PART_PAY' or sp.pay_status_code='ORDER_FINISHED' or sp.pay_status_code='ORDER_PAID_NO_COURSE' or sp.pay_status_code='ORDER_CREATED') and sp.delete_flag=0
	 <if test="name != null and name != ''">and s.name like '%${name}%'</if>
	 <if test="mobile != null and mobile != ''">and s.mobile like  '%${mobile}%'</if>
	 <if test="identityId != null and identityId != ''">and s.identity_id like '%${identityId}%'</if>
	 <if test="registType != null">
	 	<choose>
	 		<when test="registType == 1">
	 			and u.id is not null
	 		</when>
	 		<otherwise>
	 			and u.id is null
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="status != null">
	 	<choose>
	 		<when test="status == 1">
	 			and u.status = #{status}
	 		</when>
	 		<otherwise>
	 			and (u.status != 1 or u.status is null)
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="paymaterCount != null">
	 	<choose>
	 		<when test="paymaterCount == 1">
	 			and u.vip_flag<![CDATA[>=]]>1
	 		</when>
	 		<otherwise>
	 			and u.vip_flag<![CDATA[<=]]>0
	 		</otherwise>
	 	</choose>
	 </if>
	 <if test="startTime != null and startTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[>=]]> '${startTime}'</if>
	 <if test="endTime != null and endTime != ''">and date_format(s.create_time,"%Y-%m-%d") <![CDATA[<=]]> '${endTime}'</if>
	 order by s.id DESC
	</select>
	
	<select id="findStuInfoByUserId" resultMap="studentResultMap" parameterType="map" >
		select <include refid="table_columns_s" />
		from student s
		inner join users_front uf on s.user_id=uf.id 
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where c.id=#{companyId} and user_id = #{userId} 
	</select>
	
	<select id="checkUsersFrontByUsername" resultType="int" parameterType="com.yuxin.wx.model.student.Student">
		select count(1)
		from users_front 
		where ( username=#{username} || mobile=#{username} )
	</select>
	
	<select id="queryStuInfoByWhere"  resultMap="studentResultMap"  parameterType="com.yuxin.wx.model.student.Student">
		select s.id,
		s.name,
		s.sex,
		s.identity_type_code,
		s.identity_id,
		s.age,
		s.birthday,
		s.education_code,
		s.hk_address,
		s.mobile,
		s.email,
		s.qq,
		s.home_phone,
		s.office_phone,
		s.weixin_id,
		s.emergency_contact,
		s.emergency_phone,
		s.remark,
		s.remark_name,
		s.create_time,
		s.creator,
		s.update_time,
		s.updator,
		s.delete_flag,
		c.id company_id,
		scs.id school_id,
		s.user_id,
		s.province,
		s.city,
		s.county,
		s.address_detail,
		s.group_one_id,
		s.group_two_id,
		u.username
		from student s 
		left join users_front u on s.user_id=u.id
		inner join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		inner join sys_config_school scs on scs.company_id=c.id
		where  s.delete_flag <![CDATA[<>]]> 1  and c.id=#{companyId} and (s.mobile=#{mobile} or u.username=#{mobile}) limit 0,1
	</select>
	
	<select id="queryStuInfoByUserId"  resultMap="studentResultMap"  parameterType="com.yuxin.wx.model.student.Student">
		select s.id,
		s.name,
		s.sex,
		s.identity_type_code,
		s.identity_id,
		s.age,
		s.birthday,
		s.education_code,
		s.hk_address,
		s.mobile,
		s.email,
		s.qq,
		s.home_phone,
		s.office_phone,
		s.weixin_id,
		s.emergency_contact,
		s.emergency_phone,
		s.remark,
		s.remark_name,
		s.create_time,
		s.creator,
		s.update_time,
		s.updator,
		s.delete_flag,
		s.user_id,
		s.province,
		s.city,
		s.county,
		s.address_detail
		from student s 
		where  s.delete_flag=0  and s.user_id=#{userId} limit 0,1
	</select>
	
	
	
	<select id="findByGroupId"  resultType="int"  parameterType="map">
		select count(id)
		from student s 
		where  s.delete_flag=0 
		<choose>
			<when test="groupOneId != null and groupOneId != ''">and s.group_one_id = #{groupOneId}</when>
			<when test="groupTwoId != null and groupTwoId != ''">and s.group_two_id = #{groupTwoId}</when>
			<otherwise>and( s.group_one_id is not null or s.group_two_id is not null)</otherwise>
		</choose>
	</select>
	<select id="findGroupStu"  resultMap="studentResultMap"  parameterType="map">
		select *
		from student s 
		where  s.delete_flag=0 
		<choose>
			<when test="groupOneId != null and groupOneId != ''">and s.group_one_id = #{groupOneId}</when>
			<when test="groupTwoId != null and groupTwoId != ''">and s.group_two_id = #{groupTwoId}</when>
			<otherwise>and( s.group_one_id is not null or s.group_two_id is not null)</otherwise>
		</choose>
	</select>
	<select id="findByEmail"  resultMap="studentResultMap"  parameterType="map">
		select *
		from student s 
		where  s.delete_flag=0 
		<if test="email!=null and email!=''">and s.email=#{email}</if>
		limit 1;
	</select>
	<select id="findUserFrontvoByStuId"  resultMap="usersFrontVoResultMap"  parameterType="int">
		select <include refid="table_vo_columns" />
		from users_front u left join student s on u.id=s.user_id
		where s.id = #{id}
	</select>
	
	<select id="findStudentCountOnlyByMobile" resultType="int" parameterType="com.yuxin.wx.vo.student.SelectStudentOrUsersfrontVo">
		select count(s.id)
		from student s
		where  s.mobile = #{mobile}
	</select>
	<select id="findStudentOnlyByMobile" resultMap="studentResultMap" parameterType="com.yuxin.wx.vo.student.SelectStudentOrUsersfrontVo">
		select <include refid="table_columns" />
		from student s
		where s.mobile = #{mobile}
		limit 0,1
	</select>
	<select id="queryAllStudentsByCompanyId" resultType="com.yuxin.wx.vo.student.StudentImportVo"  parameterType="int"> 
		select 
			s.name as name,
			s.identity_type_code as identityTypeCode,
			s.identity_id as identityId,
			s.mobile as mobile,
			s.email as email, 
			s.qq as qq, 
			s.emergency_contact as emergencyContact,
			s.emergency_phone as emergencyPhone,
			s.delete_flag as deleteFlag,
			s.user_id as userId,
			uf.password as password,
			uf.username as username,
			s.is_in_school as isInSchool
		from student s 
		left join users_front uf on s.user_id = uf.id ORDER BY s.id desc  LIMIT 100
	</select>
	<select id="findStudentOnlyByUserId" resultMap="studentResultMap" parameterType="int">
		select <include refid="table_columns" />
		from student s
		where s.user_id = #{id}
		limit 0,1
	</select>
	<select id="queryStudentsListByIds" parameterType="Integer[]" resultMap="studentsListMap">
		select s.id,s.name,s.sex,s.identity_type_code,s.identity_id,s.age,s.birthday,s.education_code,s.hk_address,
	s.mobile,s.email,s.qq,s.home_phone,s.office_phone,s.weixin_id,s.emergency_contact,s.emergency_phone,
	s.create_time,s.creator,s.update_time,s.updator,s.delete_flag,u.id as userId,u.username,u.mobile,u.email,
	u.status,u.regist_time,u.vip_flag,u.regist_type,u.user_sign,u.vip_flag as paymaterCount
	 from student s 
	 LEFT JOIN users_front u on s.user_id=u.id
	 where s.id in 
		<foreach item="ids" collection="array" open="(" separator="," close=")">
			#{ids}
		</foreach>
	 order by s.id DESC
	</select>
	
	<resultMap type="com.yuxin.wx.model.classes.EduMasterClass" id="eduMasterClassResultMap">
		<result property="id" column="id" />
		<result property="eduArea" column="edu_area"/>
		<result property="eduSchool" column="edu_school"/>
		<result property="eduStep" column="edu_step"/>
		<result property="eduYear" column="edu_year"/>
		<result property="eduClass" column="edu_class"/>
		<result property="eduStepName" column="eduStepName"/>
	</resultMap>
	<select id="findClassByTeacherId" resultMap="eduMasterClassResultMap" parameterType="com.yuxin.wx.model.classes.EduMasterClass">
		select scd.item_value as eduStepName ,t1.edu_step as eduStep,t1.edu_year as eduYear,t1.edu_class as eduClass 
		from edu_master_class t1
		LEFT JOIN sys_config_dict scd ON scd.item_code=t1.edu_step 
		where t1.is_used=1
		<if test="userId != null and userId != ''"> and t1.user_id=#{userId}</if>
	 	<if test="eduSchool != null and eduSchool != ''"> and t1.edu_school=#{eduSchool}</if>
	 	<if test="eduStep != null and eduStep != ''"> GROUP BY t1.edu_step</if>
	 	<if test="eduYear != null and eduYear != ''"> GROUP BY t1.edu_year</if>
	 	<if test="eduClass != null and eduClass != ''"> GROUP BY t1.edu_class</if>
	</select>
	<select id="findClassByRKTeacherId" resultMap="eduMasterClassResultMap" parameterType="int">
		select emc.edu_area ,emc.edu_school,edu_step,edu_year,edu_class from edu_subject_class_teacher esc
		LEFT JOIN edu_master_class emc ON esc.class_id=emc.id
		where esc.user_id=#{id} and esc.is_used=1
	</select>
	
	
	<select id="sysConfigDict" resultMap="sysConfigDict" > 
		select id,dict_code,item_value,item_code,parent_item_id from sys_config_dict where dict_code='EDU_SCHOOL_AREA' or dict_code='EDU_SCHOOL';
	</select>
</mapper>
