<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.system.mapper.SysConfigItemRelationMapper">
    <resultMap type="com.yuxin.wx.model.system.SysConfigItemRelation" id="sysConfigItemRelationResultMap">
        <result property="id" column="id" />
        <result property="itemCode" column="item_code" />
        <result property="parentCode" column="parent_code" />
        <result property="parentId" column="parent_id" />
        <result property="level" column="level" />
        <result property="levelPath" column="level_path" />
        <result property="isParent" column="is_parent" />
        <result property="itemName" column="item_name" />
    </resultMap>
    <sql id="table_columns">
        id,
        item_code,
        parent_code,
        parent_id,
        level,
        level_path,
        is_parent
    </sql>
    <sql id="table_columns_sci">
        sci.id,
        sci.item_code,
        sci.parent_code,
        sci.parent_id,
        sci.level,
        sci.level_path,
        sci.is_parent
    </sql>
    <sql id="entity_properties">
        #{id},
        #{itemCode},
        #{parentCode},
        #{parentId},
        #{level},
        #{levelPath},
        #{isParent}
    </sql>
    <!-- 适用于主键自增类型 -->
    <insert id="insert" parameterType="com.yuxin.wx.model.system.SysConfigItemRelation"
            useGeneratedKeys="true" keyProperty="id">
        insert into sys_config_item_relation(
        id,
        item_code,
        parent_code,
        parent_id,
        level,
        level_path,
        is_parent,
        company_id
        )
        values (
        	#{id},
        	#{itemCode},
        	#{parentCode},
        	#{parentId},
        	#{level},
        	#{levelPath},
        	#{isParent},
        	#{companyId}
        )
    </insert>

    <update id="update" parameterType="com.yuxin.wx.model.system.SysConfigItemRelation">
        update sys_config_item_relation
        <trim prefix="set" suffixOverrides=",">
            <if test="itemCode != null and itemCode != ''">item_code = #{itemCode},</if>
            <if test="parentCode != null and parentCode != ''">parent_code = #{parentCode},</if>
            <if test="parentId != null ">parent_id = #{parentId},</if>
            <if test="level != null ">level = #{level},</if>
            <if test="levelPath != null and levelPath != ''">level_path = #{levelPath}</if>
            <if test="isParent != null ">is_parent = #{isParent}</if>
        </trim>
        <where>id = #{id}</where>
    </update>


    <select id="findFirstLevel" resultMap="sysConfigItemRelationResultMap"
            parameterType="String">
        select
        <include refid="table_columns_sci" />
        from sys_config_item_relation sci
        inner join sys_config_item syc on sci.item_code=syc.item_code and syc.company_id=#{companyId}
        inner join sys_school_item_relation ssr on ssr.item_id=syc.id and ssr.del_flag=0
        where sci.level = 0 and syc.status = 1 and sci.company_id=#{companyId}
    </select>
    <select id="findRelationByParentId" resultMap="sysConfigItemRelationResultMap"
            parameterType="map">
        select
        <include refid="table_columns" />
        from sys_config_item_relation
        where parent_id = #{id}
        <if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
    </select>
    <select id="findRelationByCode" resultMap="sysConfigItemRelationResultMap"
            parameterType="map">
        select
        <include refid="table_columns" />
        from sys_config_item_relation
        where item_code = #{itemCode}
        <if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
    </select>
    <select id="findRelationByLevel" resultMap="sysConfigItemRelationResultMap"
            parameterType="Integer">
        select
        <include refid="table_columns" />
        from sys_config_item_relation
        where level = #{level}
    </select>
    <select id="findItemByIds" resultMap="sysConfigItemRelationResultMap" parameterType="list">
        select
        <include refid="table_columns" />
        from sys_config_item_relation
        where id in
        <foreach item="item" collection="list" open="(" separator=","
                 close=")">
            #{item}
        </foreach>
    </select>
    
    
    <delete id="deleteById">
        delete from sys_config_item_relation
        where id = #{id}
    </delete>

    <delete id="deleteFront" parameterType="int">
        delete from sys_config_item_relation_front where company_id=#{companyId}
    </delete>
    <insert id="publish" parameterType="int">
     insert sys_config_item_relation_front(id,item_code,parent_code,level,parent_id,level_path,is_parent,origin_type,company_id) 
      (select id,item_code,parent_code,level,parent_id,level_path,is_parent,0,company_id from sys_config_item_relation where company_id=#{companyId})
    </insert>
<!--发布后查询SQL-->
    <select id="findFirstLevelFront" resultMap="sysConfigItemRelationResultMap"
            parameterType="int">
       select
         a.*
        from sys_config_item_relation_front a
         LEFT JOIN sys_config_item s on s.item_code=a.item_code
        where a.level = 0  and a.origin_type=0 and s.company_id=#{companyId} and s.del_flag=0
    </select>
    <select id="findChildrenFront" resultMap="sysConfigItemRelationResultMap"
            parameterType="com.yuxin.wx.model.system.SysConfigItemRelation">
        select
        <include refid="table_columns" />
        from sys_config_item_relation_front
        where parent_id = #{id} and origin_type=0 and company_id=#{companyId}
    </select>
    <select id="findAllItemFront" resultMap="sysConfigItemRelationResultMap" parameterType="int">
        SELECT DISTINCT
        (rf.item_code) AS item_code,(select item_name from sys_config_item sci where sci.item_code=rf.item_code and sci.company_id=#{companyId})as item_name,
        LEVEL
          FROM
        sys_config_item_relation_front rf where rf.origin_type=0 and rf.company_id=#{companyId}
    </select>
    <select id="findAllItemRelation" resultMap="sysConfigItemRelationResultMap" parameterType="Map">
        SELECT DISTINCT
        scir.id,(select item_name from sys_config_item sci where sci.item_code=scir.item_code and   sci.del_flag != 1 and sci.company_id=#{companyId})as item_name,
        scir.item_code,scir.level,scir.parent_id  FROM
        sys_config_item_relation_front scir
        <where> scir.origin_type=0
        <if test="companyId != null and companyId !='' ">and  scir.company_id=#{companyId}</if>
        <if test="level != null ">and scir.level=#{level}</if>
        <if test="parentId != null  "> and scir.parent_id=#{parentId}</if>
        <if test="parentCode != null and parentCode !='' "> and scir.parent_code=#{parentCode}</if>
        </where>
    </select>

    <select id="findItemFrontByLevel" resultMap="sysConfigItemRelationResultMap"
            parameterType="Integer">
        SELECT DISTINCT
        (rf.item_code) AS item_code,(SELECT item_name FROM sys_config_item sci WHERE sci.item_code=rf.item_code  and sci.company_id=18113)AS item_name,
        LEVEL
          FROM
        sys_config_item_relation_front rf
        WHERE LEVEL = #{level} and rf.origin_type=0 and rf.company_id=#{companyId}
    </select>

    <select id="findChildByCode"  resultMap="sysConfigItemRelationResultMap" parameterType="com.yuxin.wx.model.system.SysConfigItemRelation">

        select   DISTINCT
        (rf.item_code) AS item_code,(SELECT item_name FROM sys_config_item sci WHERE sci.item_code=rf.item_code  and sci.company_id=rf.company_id)AS item_name
        from
         sys_config_item_relation_front rf
         where  parent_code =#{itemCode} and rf.origin_type=0 and rf.company_id=#{companyId}
    </select>

    <select id="findItemByEduStep"  resultMap="sysConfigItemRelationResultMap" parameterType="Map">

         SELECT   c.*
        FROM
         sys_knowledge_tree_item_relation kt LEFT JOIN sys_config_item c ON kt.`item_grade` = c.`item_code`
         WHERE kt.`edu_step` = #{eduStep} and kt.`comapny_id` = #{companyId} and c.company_id = #{companyId} ORDER BY sort
    </select>


    <select id="findRelationFrontByParentCode"  resultMap="sysConfigItemRelationResultMap" parameterType="Map">

        SELECT  DISTINCT(t.id),t.*
        FROM
        sys_config_item_relation_front rf LEFT JOIN sys_config_item t ON rf.`item_code` = t.`item_code`
        WHERE rf.origin_type=0 AND rf.`company_id` = #{companyId} and rf.parent_code = #{parentCode} and t.company_id = #{companyId} ORDER BY sort
    </select>
</mapper>
