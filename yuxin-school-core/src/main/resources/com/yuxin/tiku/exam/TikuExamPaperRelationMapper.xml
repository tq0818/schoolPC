<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.tiku.exam.mapper.TikuExamPaperRelationMapper">
	<resultMap type="com.yuxin.wx.model.tiku.exam.TikuExamPaperRelation" id="tikuExamPaperRelationResultMap">
		<result property="id" column="id" />
		<result property="tikuExamId" column="tiku_exam_id" />
		<result property="tikuPaperId" column="tiku_paper_id" />
		<result property="status" column="status" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
	</resultMap>
	<resultMap type="com.yuxin.wx.vo.tiku.exam.TikuExamPaperRelationVo" id="tikuExamRateVoResultMap" extends="tikuExamPaperRelationResultMap">
		<association property="allPeople" column="tiku_exam_id" select="findExamAllPeople"></association>
		<association property="passPeople" column="tiku_exam_id" select="findExamPassPeople"></association>
	</resultMap>
	<resultMap type="com.yuxin.wx.vo.tiku.exam.TikuExamPaperRelationVo" id="tikuExamPaperRelationVoResultMap" extends="tikuExamPaperRelationResultMap">
		<association property="paperName" column="tiku_paper_id" select="findPaperName"></association>
		<association property="paperAvg"  column="{paperId=tiku_paper_id,examId=tiku_exam_id}" select="findPaperAvg"></association>
		<association property="paperCount"  column="{paperId=tiku_paper_id,examId=tiku_exam_id}" select="findPaperCount"></association>
		<association property="allPaperPeople" column="{paperId=tiku_paper_id,examId=tiku_exam_id}" select="findAllPaperPeople"></association>
		<association property="passPaperPeople" column="{paperId=tiku_paper_id,examId=tiku_exam_id}" select="findPassPaperPeople"></association>
	</resultMap>
	<resultMap type="com.yuxin.wx.vo.tiku.exam.TikuExamPaperRelationVo" id="tikuPaperResultMap" extends="tikuExamPaperRelationResultMap">
		<association property="paperName" column="tiku_paper_id" select="findPaperName"></association>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.tiku.exam.TikuExamPaperRelationVo" id="tikuExamPaperRelationResultVoMap" extends="tikuExamPaperRelationResultMap">
		<association property="cateName" column="tiku_paper_id" javaType="String"
			select="findCateNameByPaperId"></association>
		<association property="subName" column="tiku_paper_id" javaType="String"
			select="findSubNameByPaperId"></association>
		<association property="paperName" column="tiku_paper_id" javaType="String"
			select="findpaperNameByPaperId"></association>
	</resultMap>
	
	<sql id="table_columns">
		id,
		tiku_exam_id,
		tiku_paper_id,
		status,
		create_time,
		creator,
		update_time,
		updator
    </sql>
	<sql id="entity_properties">
		#{id},
		#{tikuExamId},
		#{tikuPaperId},
		#{status},
		#{createTime},
		#{creator},
		#{updateTime},
		#{updator}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.tikuExamId},
		#{item.tikuPaperId},
		#{item.status},
		#{item.createTime},
		#{item.creator},
		#{item.updateTime},
		#{item.updator}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.tiku.exam.TikuExamPaperRelation" useGeneratedKeys="true" keyProperty="id">
		insert into tiku_exam_paper_relation( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into tiku_exam_paper_relation( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="batch_entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from tiku_exam_paper_relation
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from tiku_exam_paper_relation
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.tiku.exam.TikuExamPaperRelation">
		update tiku_exam_paper_relation 
		<trim prefix="set" suffixOverrides=",">
			<if test="tikuExamId != null and tikuExamId != ''">tiku_exam_id = #{tikuExamId},</if>
			<if test="tikuPaperId != null and tikuPaperId != ''">tiku_paper_id = #{tikuPaperId},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="createTime != null and createTime != ''">create_time = #{createTime},</if>
			<if test="creator != null and creator != ''">creator = #{creator},</if>
			<if test="updateTime != null and updateTime != ''">update_time = #{updateTime},</if>
			<if test="updator != null and updator != ''">updator = #{updator},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
	
	<select id="findById" resultMap="tikuExamPaperRelationResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from tiku_exam_paper_relation
		where id = #{id}
	</select>
	
	<select id="queryAll" resultMap="tikuExamPaperRelationResultMap">
		select <include refid="table_columns" /> 
		from tiku_exam_paper_relation
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="tikuExamId != null and tikuExamId != ''">and tiku_exam_id = #{tikuExamId}</if>
			<if test="tikuPaperId != null and tikuPaperId != ''">and tiku_paper_id = #{tikuPaperId}</if>
			<if test="status != null and status != ''">and status = #{status}</if>
			<if test="createTime != null and createTime != ''">and create_time = #{createTime}</if>
			<if test="creator != null and creator != ''">and creator = #{creator}</if>
			<if test="updateTime != null and updateTime != ''">and update_time = #{updateTime}</if>
			<if test="updator != null and updator != ''">and updator = #{updator}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="tikuExamPaperRelationResultMap" parameterType="com.yuxin.wx.model.tiku.exam.TikuExamPaperRelation">
		select <include refid="table_columns" />
		from tiku_exam_paper_relation
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	<select id="byPage" resultMap="tikuExamPaperRelationVoResultMap" parameterType="com.yuxin.wx.model.tiku.exam.TikuExamPaperRelation">
		select <include refid="table_columns" />
		from tiku_exam_paper_relation
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.tiku.exam.TikuExamPaperRelation">
		select count(id) from tiku_exam_paper_relation
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	
	<select id="findExamAllPeople" resultType="int" parameterType="String">
		select count(id) from (select id from tiku_exam_user_relation where tiku_exam_id = #{examId} group by user_id) aaa
	</select>
	
	<select id="findPaperCount" resultType="int" parameterType="java.util.Map">
		select count(id) from tiku_exam_user_relation as tr where tr.tiku_exam_id = #{examId}  and tr.tiku_paper_id = #{paperId}
	</select>
	<select id="findPaperAvg" resultType="double" parameterType="java.util.Map">
		select IFNULL(avg(`score`), 0) as score from tiku_exam_user_relation as tr where tr.tiku_exam_id = #{examId}  and tr.tiku_paper_id = #{paperId}
	</select>
	<select id="findAllPaperPeople" resultType="int" parameterType="java.util.Map">
		select count(id) from (select id from tiku_exam_user_relation as tr where tr.tiku_exam_id = #{examId}  and tr.tiku_paper_id = #{paperId} group by tr.user_id) aaa
	</select>
	<select id="findPassPaperPeople" resultType="int" parameterType="java.util.Map">
		select count(id) from (select id from tiku_exam_user_relation as tr where tr.tiku_exam_id = #{examId}  and tr.tiku_paper_id = #{paperId} and tr.status = 1 group by tr.user_id) aaa
	</select>
	
	<select id="findRateByExamId" resultMap="tikuExamRateVoResultMap" parameterType="String">
		select tiku_exam_id
		from tiku_exam_paper_relation
		where tiku_exam_id = #{examId} GROUP BY tiku_exam_id
		limit 1
	</select>
	
	<select id="findPaperName" resultType="String" parameterType="String">
		select
		paper_name
		from tiku_paper
		where id = #{id}
	</select>
	<select id="findExamPassPeople" resultType="int" parameterType="String">
		select count(id) from (select id from tiku_exam_user_relation where tiku_exam_id = #{examId} and status=1 group by user_id) aaa
	</select>
	<!-- 查询题库名根据试卷id -->
	<select id="findCateNameByPaperId" parameterType="Integer" resultType="String">
		select c.tiku_name cateName from tiku_category c
			inner join tiku_paper p on p.tiku_category_id = c.id
		where p.id = #{id} and c.origin_type=0 
	</select>
	
	<!-- 查询题库分类名根据试卷id -->
	<select id="findSubNameByPaperId" parameterType="Integer" resultType="String">
		select s.subject_name subName from tiku_subject s
			inner join tiku_paper p on p.tku_subject_id = s.id
		where p.id = #{id}
	</select>
	
	<select id="findpaperNameByPaperId" parameterType="Integer" resultType="String">
		select paper_name paperName from tiku_paper
		where id = #{id}
	</select>
	
	<select id="examPaperCount" parameterType="String" resultType="Integer">
		select count(id) from tiku_exam_paper_relation where tiku_exam_id = #{examId} limit 1
	</select>
	
	<!-- 根据考试查询试卷 -->
	<select id="findPaperByExamId" parameterType="Integer" resultMap="tikuExamPaperRelationResultVoMap">
		select <include refid="table_columns"/>
		from tiku_exam_paper_relation
		where tiku_exam_id = #{id} and 
			status = 1
	</select>
	
	<!-- 查询是否存在 -->
	<select id="findExist" parameterType="map" resultMap="tikuExamPaperRelationResultMap">
		select <include refid="table_columns"/>
		from tiku_exam_paper_relation
		where tiku_exam_id = #{tikuExamId} and
			tiku_paper_id = #{tikuPaperId}
			limit 1
	</select>
</mapper>