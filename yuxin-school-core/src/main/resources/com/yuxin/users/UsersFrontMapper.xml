<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuxin.wx.user.mapper.UsersFrontMapper">
	<resultMap type="com.yuxin.wx.model.user.UsersFront" id="usersFrontResultMap">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="status" column="status" />
		<result property="emailAuthSign" column="email_auth_sign" />
		<result property="emailAuthSendtime" column="email_auth_sendtime" />
		<result property="emailAuthCode" column="email_auth_code" />
		<result property="userCity" column="user_city" />
		<result property="uuid" column="uuid" />
		<result property="headPicMin" column="head_pic_min" />
		<result property="headPicMid" column="head_pic_mid" />
		<result property="headPicMax" column="head_pic_max" />
		<result property="registTime" column="regist_time" />
		<result property="interests" column="interests" />
		<result property="vipFlag" column="vip_flag" />
		<result property="registType" column="regist_type" />
		<result property="promoteSource" column="promote_source" />
		<result property="promoteKeyword" column="promote_keyword" />
		<result property="nickName" column="nick_name" />
		<result property="memberLevel" column="member_level" />
		<result property="memberId" column="member_id" />
		<result property="memberBuyLength" column="member_buy_length" />
		<result property="memberEndTime" column="member_end_time" />
		<result property="integralRemaining" column="integral_remaining" />
		<result property="memberStatus" column="member_status" />
        <result property="recharge" column="recharge" />
        <result property="wxOpenId" column="wx_open_id" />
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.user.UsersStudentInfo" id="userStuResultMap">
		<result property="id" column="id"/>
		<result property="mobile" column="mobile"/>
		<result property="stuname" column="name"/>
		<result property="nickName" column="nick_name"/>
		<result property="memberEndTime" column="member_end_time"/>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.user.UsersFrontVo" id="usersFrontVoResultMap">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="mobile" column="mobile" />
		<result property="email" column="email" />
		<result property="status" column="status" />
		<result property="emailAuthSign" column="email_auth_sign" />
		<result property="emailAuthSendtime" column="email_auth_sendtime" />
		<result property="emailAuthCode" column="email_auth_code" />
		<result property="userCity" column="user_city" />
		<result property="uuid" column="uuid" />
		<result property="headPicMin" column="head_pic_min" />
		<result property="headPicMid" column="head_pic_mid" />
		<result property="headPicMax" column="head_pic_max" />
		<result property="registTime" column="regist_time" />
		<result property="interests" column="interests" />
		<result property="vipFlag" column="vip_flag" />
		<result property="registType" column="regist_type" />
		<result property="userSign" column="user_sign" />
		<result property="promoteSource" column="promote_source" />
		<result property="promoteKeyword" column="promote_keyword" />
		<result property="nickName" column="nick_name" />
	
		<result property="stuId" column="stuId"/>
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="identityTypeCode" column="identity_type_code" />
		<result property="identityId" column="identity_id" />
		<result property="age" column="age" />
		<result property="birthday" column="birthday" />
		<result property="educationCode" column="education_code" />
		<result property="hkAddress" column="hk_address" />
		<result property="qq" column="qq" />
		<result property="homePhone" column="home_phone" />
		<result property="officePhone" column="office_phone" />
		<result property="weixinId" column="weixin_id" />
		<result property="wxOpenId" column="wx_open_id" />
		<result property="emergencyContact" column="emergency_contact" />
		<result property="emergencyPhone" column="emergency_phone" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="creator" column="creator" />
		<result property="updateTime" column="update_time" />
		<result property="updator" column="updator" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="remarkName" column="remark_name" />
		
		<result property="memberLevel" column="member_level" />
		<result property="memberId" column="member_id" />
		<result property="memberBuyLength" column="member_buy_length" />
		<result property="memberEndTime" column="member_end_time" />
		<result property="integralRemaining" column="integral_remaining" />
		<result property="memberStatus" column="member_status" />
		
		<result property="weibo" column="weibo" />
		<result property="invitCode" column="invite_code"/>
        <result property="recharge" column="recharge"/>
	</resultMap>
	
	<resultMap type="com.yuxin.wx.vo.user.UsersFrontIntegralVo" id="userFrontIntegralMapVo">
		<result property="userId" column="userId" />
		<result property="integralRemaining" column="integralRemaining" />
		<result property="stuId" column="stuId" />
		<result property="stuName" column="stuName" />
		<result property="mobile" column="mobile" />
	</resultMap>
	
	<sql id="table_columns">
		id,
		username,
		password,
		mobile,
		email,
		status,
		email_auth_sign,
		email_auth_sendtime,
		email_auth_code,
		user_city,
		uuid,
		head_pic_min,
		head_pic_mid,
		head_pic_max,
		regist_time,
		interests,
		vip_flag,
		regist_type,
		promote_source,
		promote_keyword,
		nick_name,
		member_level,
		member_id,
		member_buy_length,
		member_end_time,
		integral_remaining,
		member_status,
        recharge,
        wx_open_id
    </sql>
     <sql id="table_vo_columns">
		u.id,
		u.username,
		u.password,
		u.mobile,
		u.email,
		u.status,
		u.email_auth_sign,
		u.email_auth_sendtime,
		u.email_auth_code,
		u.user_city,
		u.uuid,
		u.head_pic_min,
		u.head_pic_mid,
		u.head_pic_max,
		u.regist_time,
		u.interests,
		u.vip_flag,
		u.regist_type,
		u.promote_source,
		u.promote_keyword,
		u.user_sign,
		u.nick_name,
		s.id as stuId,
		s.name,
		s.sex,
		s.identity_type_code,
		s.identity_id,
		s.age,
		s.birthday,
		s.education_code,
		s.hk_address,
		s.qq,
		s.home_phone,
		s.office_phone,
		s.weixin_id,
		s.emergency_contact,
		s.emergency_phone,
		s.remark,
		s.create_time,
		s.creator,
		s.update_time,
		s.updator,
		s.delete_flag,
		s.remark_name,
		u.member_level,
		u.member_id,
		u.member_buy_length,
		u.member_end_time,
		u.integral_remaining,
		u.member_status,
		u.qq,
		u.weibo,
		u.invite_code
    </sql>
	<sql id="entity_properties">
		#{id},
		#{username},
		#{password},
		#{mobile},
		#{email},
		#{status},
		#{emailAuthSign},
		#{emailAuthSendtime},
		#{emailAuthCode},
		#{userCity},
		#{uuid},
		#{headPicMin},
		#{headPicMid},
		#{headPicMax},
		#{registTime},
		#{interests},
		#{vipFlag},
		#{registType},
		#{promoteSource},
		#{promoteKeyword},
		#{nickName},
		#{memberLevel},
		#{memberId},
		#{memberBuyLength},
		#{memberEndTime},
		#{integralRemaining},
		#{memberStatus},
        #{recharge},
        #{wxOpenId}
	</sql>
	<sql id="batch_entity_properties">
		#{item.id},
		#{item.username},
		#{item.password},
		#{item.mobile},
		#{item.email},
		#{item.status},
		#{item.emailAuthSign},
		#{item.emailAuthSendtime},
		#{item.emailAuthCode},
		#{item.userCity},
		#{item.uuid},
		#{item.headPicMin},
		#{item.headPicMid},
		#{item.headPicMax},
		#{item.registTime},
		#{item.interests},
		#{item.vipFlag},
		#{item.registType},
		#{item.promoteSource},
		#{item.promoteKeyword},
		#{item.nickName},
		#{item.memberLevel},
		#{item.memberId},
		#{item.memberBuyLength},
		#{item.memberEndTime},
		#{item.integralRemaining},
		#{item.memberStatus},
        #{item.recharge}
	</sql>
	
	<!-- 适用于主键自增类型 -->
	<insert id="insert" parameterType="com.yuxin.wx.model.user.UsersFront" useGeneratedKeys="true" keyProperty="id">
		insert into users_front( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	<insert id="insert2" parameterType="com.yuxin.wx.model.user.UsersFront" useGeneratedKeys="true" keyProperty="id">
		insert into users_front( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<!-- 批量添加 适用于主键自增类型  不支持返回主键-->
	<insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
		insert into users_front( <include refid="table_columns" /> ) 
		values 
		<foreach item="item" collection="list" separator="," >
			( <include refid="entity_properties" /> )
		</foreach>
	</insert>
	
	<!--根据主键删除 -->
	<delete id="deleteById">
		delete from users_front
		where id = #{id}
	</delete>
	
	<!-- 根据ID批量删除 -->
	<delete id="deleteByIds">
		delete from users_front
		where id in
		<foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	
	<update id="update" parameterType="com.yuxin.wx.model.user.UsersFront">
		update users_front 
		<trim prefix="set" suffixOverrides=",">
			<if test="username != null and username != ''">username = #{username},</if>
			<if test="password != null and password != ''">password = #{password},</if>
			<if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
			<if test="email != null and email != ''">email = #{email},</if>
			<if test="status != null">status = #{status},</if>
			<if test="emailAuthSign != null and emailAuthSign != ''">email_auth_sign = #{emailAuthSign},</if>
			<if test="emailAuthSendtime != null and emailAuthSendtime != ''">email_auth_sendtime = #{emailAuthSendtime},</if>
			<if test="emailAuthCode != null and emailAuthCode != ''">email_auth_code = #{emailAuthCode},</if>
			<if test="userCity != null and userCity != ''">user_city = #{userCity},</if>
			<if test="uuid != null and uuid != ''">uuid = #{uuid},</if>
			<if test="headPicMin != null and headPicMin != ''">head_pic_min = #{headPicMin},</if>
			<if test="headPicMid != null and headPicMid != ''">head_pic_mid = #{headPicMid},</if>
			<if test="headPicMax != null and headPicMax != ''">head_pic_max = #{headPicMax},</if>
			<if test="registTime != null and registTime != ''">regist_time = #{registTime},</if>
			<if test="interests != null and interests != ''">interests = #{interests},</if>
			<if test="vipFlag != null">vip_flag = #{vipFlag},</if>
			<if test="registType != null and registType != ''">regist_type = #{registType},</if>
			<if test="promoteSource != null and promoteSource != ''">promote_source = #{promoteSource},</if>
			<if test="promoteKeyword != null and promoteKeyword != ''">promote_keyword = #{promoteKeyword},</if>
			<if test="userSign != null and userSign != ''">user_sign = #{userSign},</if>
			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
			<if test="memberLevel != null and memberLevel != ''">member_level = #{memberLevel},</if>
			<if test="memberId != null and memberId != ''">member_id = #{memberId},</if>
			<if test="memberBuyLength != null and memberBuyLength != ''">member_buy_length = #{memberBuyLength},</if>
			<if test="memberEndTime != null and memberEndTime != ''">member_end_time = #{memberEndTime},</if>
			<if test="integralRemaining != null">integral_remaining = #{integralRemaining},</if>
			<if test="memberStatus != null">member_status = #{memberStatus},</if>
            <if test="recharge != null">recharge = #{recharge},</if>
		</trim>
		<where>id = #{id}</where>
	</update>
		<update id="updateNull" parameterType="com.yuxin.wx.model.user.UsersFront">
		update users_front 
		<trim prefix="set" suffixOverrides=",">
			<if test="username != null and username != ''">username = #{username},</if>
			<if test="password != null and password != ''">password = #{password},</if>
			<if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
			<if test="email != null and email != ''">email = #{email},</if>
			<if test="status != null">status = #{status},</if>
			<if test="emailAuthSign != null and emailAuthSign != ''">email_auth_sign = #{emailAuthSign},</if>
			<if test="emailAuthSendtime != null and emailAuthSendtime != ''">email_auth_sendtime = #{emailAuthSendtime},</if>
			<if test="emailAuthCode != null and emailAuthCode != ''">email_auth_code = #{emailAuthCode},</if>
			<if test="userCity != null and userCity != ''">user_city = #{userCity},</if>
			<if test="uuid != null and uuid != ''">uuid = #{uuid},</if>
			<if test="headPicMin != null and headPicMin != ''">head_pic_min = #{headPicMin},</if>
			<if test="headPicMid != null and headPicMid != ''">head_pic_mid = #{headPicMid},</if>
			<if test="headPicMax != null and headPicMax != ''">head_pic_max = #{headPicMax},</if>
			<if test="registTime != null and registTime != ''">regist_time = #{registTime},</if>
			<if test="interests != null and interests != ''">interests = #{interests},</if>
			<if test="vipFlag != null">vip_flag = #{vipFlag},</if>
			<if test="registType != null and registType != ''">regist_type = #{registType},</if>
			<if test="promoteSource != null and promoteSource != ''">promote_source = #{promoteSource},</if>
			<if test="promoteKeyword != null and promoteKeyword != ''">promote_keyword = #{promoteKeyword},</if>
			<if test="userSign != null and userSign != ''">user_sign = #{userSign},</if>
			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="recharge != null">recharge = #{recharge},</if>
			member_level = #{memberLevel},
			member_id = #{memberId},
			member_buy_length = #{memberBuyLength},
			member_end_time = #{memberEndTime},
			<if test="integralRemaining != null">integral_remaining = #{integralRemaining},</if>
			member_status = #{memberStatus},
		</trim>
		<where>id = #{id}</where>
	</update>
	<select id="findById" resultMap="usersFrontResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from users_front
		where id = #{id}
	</select>
	<select id="findVoById" resultMap="usersFrontVoResultMap" parameterType="Integer" >
		select <include refid="table_vo_columns" />
		from users_front u left join student s on u.id=s.user_id
		where u.id = #{id}
	</select>
	<select id="queryAll" resultMap="usersFrontResultMap">
		select <include refid="table_columns" /> 
		from users_front
	</select>
	
	<!-- 使用like用法：columnName like concat('%',#columnName#,'%') -->
	<sql id="page_where">
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="username != null and username != ''">and username = #{username}</if>
			<if test="password != null and password != ''">and password = #{password}</if>
			<if test="mobile != null and mobile != ''">and mobile = #{mobile}</if>
			<if test="email != null and email != ''">and email = #{email}</if>
			<if test="schoolId != null and schoolId != ''">and school_id = #{schoolId}</if>
			<if test="status != null and status != ''">and status = #{status}</if>
			<if test="companyId != null and companyId != ''">and company_id = #{companyId}</if>
			<if test="emailAuthSign != null and emailAuthSign != ''">and email_auth_sign = #{emailAuthSign}</if>
			<if test="emailAuthSendtime != null and emailAuthSendtime != ''">and email_auth_sendtime = #{emailAuthSendtime}</if>
			<if test="emailAuthCode != null and emailAuthCode != ''">and email_auth_code = #{emailAuthCode}</if>
			<if test="userCity != null and userCity != ''">and user_city = #{userCity}</if>
			<if test="uuid != null and uuid != ''">and uuid = #{uuid}</if>
			<if test="headPicMin != null and headPicMin != ''">and head_pic_min = #{headPicMin}</if>
			<if test="headPicMid != null and headPicMid != ''">and head_pic_mid = #{headPicMid}</if>
			<if test="headPicMax != null and headPicMax != ''">and head_pic_max = #{headPicMax}</if>
			<if test="registTime != null and registTime != ''">and regist_time = #{registTime}</if>
			<if test="interests != null and interests != ''">and interests = #{interests}</if>
			<if test="vipFlag != null and vipFlag != ''">and vip_flag = #{vipFlag}</if>
			<if test="registType != null and registType != ''">and regist_type = #{registType}</if>
			<if test="promoteSource != null and promoteSource != ''">and promote_source = #{promoteSource}</if>
			<if test="promoteKeyword != null and promoteKeyword != ''">and promote_keyword = #{promoteKeyword}</if>
			<if test="userSign != null and userSign != ''">and user_sign = #{userSign}</if>
			<if test="nickName != null and nickName != ''">and nick_name = #{nickName}</if>
			<if test="memberLevel != null and memberLevel != ''">and member_level = #{memberLevel}</if>
			<if test="memberId != null and memberId != ''">and member_id = #{memberId}</if>
			<if test="memberBuyLength != null and memberBuyLength != ''">and member_buy_length = #{memberBuyLength}</if>
			<if test="memberEndTime != null and memberEndTime != ''">and member_end_time = #{memberEndTime}</if>
			<if test="integralRemaining != null and integralRemaining != ''">and integral_remaining = #{integralRemaining}</if>
            <if test="recharge != null">and recharge = #{recharge}</if>
		</trim>
	</sql>
	
	<select id="page" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.model.user.UsersFront">
		select <include refid="table_columns" />
		from users_front
		<include refid="page_where" />
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="pageCount" resultType="int" parameterType="com.yuxin.wx.model.user.UsersFront">
		select count(id) from users_front
		<include refid="page_where" />
	</select>
	
	<!-- 其他自定义SQL -->
	
	<select id="findUsersFrontByEmail" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.model.user.UsersFront">
		select <include refid="table_columns" />
		from users_front
		where 
			email = #{email}
			and status=1 and company_id=#{companyId}
			limit 1
	</select>
	<select id="findUsersFrontByMobile" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.model.user.UsersFront">
		select <include refid="table_columns" />
		from users_front
		where 
			(mobile = #{mobile} or username=#{username})
			limit 0,1
	</select>
	<select id="findUsersFrontByMobileAndUsername" resultType="int" parameterType="com.yuxin.wx.model.user.UsersFront">
		select count(1)
		from ( 
		<if test="mobile != null and mobile != ''">
		(select id
		from users_front
		where  mobile = #{mobile}
		and member_id is not null and member_status=1 and (member_buy_length>0 || member_buy_length=-1) and (TO_DAYS(date_format(NOW(), "%Y-%m-%d"))-TO_DAYS(member_end_time) <![CDATA[<]]> 0 || member_end_time is null))
		</if>
		<if test="mobile != null and mobile != '' and username != null and username != ''">
		union
		</if>
		<if test="username != null and username != ''">
		(select id
		from users_front
		where  username = #{username}
		and member_id is not null and member_status=1 and (member_buy_length>0 || member_buy_length=-1) and (TO_DAYS(date_format(NOW(), "%Y-%m-%d"))-TO_DAYS(member_end_time) <![CDATA[<]]> 0 || member_end_time is null)) 
		</if>) as a
	</select>
	<select id="findUsersFrontByUsername" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.model.user.UsersFront">
		select <include refid="table_columns" />
		from users_front
		where 
			username = #{username} limit 0,1
	</select>
	
	<select id="findUserList" resultType="com.yuxin.wx.vo.user.UsersFrontVo" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select 
		uf.id,
		uf.username,
		uf.password,
		uf.mobile,
		st.email,
		s.id as schoolId,
		uf.status,
		c.id as companyId,
		uf.email_auth_sign as emailAuthSign,
		uf.email_auth_sendtime as emailAuthSendtime,
		uf.email_auth_code as emailAuthCode,
		uf.user_city as userCity,
		uf.uuid,
		uf.head_pic_min as headPicMin,
		uf.head_pic_mid as headPicMid,
		uf.head_pic_max as headPicMax,
		uf.regist_time as registTime,
		uf.interests,
		uf.vip_flag vipFlag,
		uf.regist_type as registType,
		uf.promote_source as promoteSource,
		uf.promote_keyword as promoteKeyword,
        uf.recharge as recharge,
		st.name,
		s.school_name as schoolName
		from users_front uf 
		left join student st on uf.id=st.user_id
		left join company c on c.is_area=0 or c.is_area=1 and st.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=st.edu_school
		left join sys_config_school s on s.company_id=c.id
		where c.id=#{companyId}
			<if test="schoolId != null"> and s.id=#{schoolId}</if>
			<if test="startDate != null"> and date_format(uf.regist_time, "%Y-%m-%d") <![CDATA[>=]]> '${startDate}'</if>
			<if test="endDate != null"> and date_format(uf.regist_time, "%Y-%m-%d") <![CDATA[<=]]> '${endDate}'</if>
			<if test="vipFlag != null"> and uf.vip_flag = #{vipFlag}</if>
			<if test="registType != null"> and uf.regist_type = #{registType}</if>
			<if test="timeLen !=null and timeLen != 1">and TO_DAYS(DATE_FORMAT(NOW(),'%Y-%m-%d'))-TO_DAYS(DATE_FORMAT(uf.regist_time,'%Y-%m-%d'))<![CDATA[<=]]>#{timeLen}</if>
			<if test="timeLen !=null and timeLen == 1">and TO_DAYS(DATE_FORMAT(NOW(),'%Y-%m-%d'))-TO_DAYS(DATE_FORMAT(uf.regist_time,'%Y-%m-%d'))<![CDATA[=]]>#{timeLen}</if>
			limit #{firstIndex},#{pageSize}
	</select>
	<select id="findUserVipList" resultType="com.yuxin.wx.vo.user.UsersFrontVo" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select 
		uf.id,
		uf.username,
		uf.password,
		uf.mobile,
		uf.email,
		s.id as schoolId,
		uf.status,
		c.id as companyId,
		uf.email_auth_sign as emailAuthSign,
		uf.email_auth_sendtime as emailAuthSendtime,
		uf.email_auth_code as emailAuthCode,
		uf.user_city as userCity,
		uf.uuid,
		uf.head_pic_min as headPicMin,
		uf.head_pic_mid as headPicMid,
		uf.head_pic_max as headPicMax,
		uf.regist_time as registTime,
		uf.interests,
		uf.vip_flag vipFlag,
		uf.regist_type as registType,
		uf.promote_source as promoteSource,
		uf.promote_keyword as promoteKeyword,
		uf.member_id as memberId,
		uf.member_level as memberLevel,
		uf.member_buy_length as memberBuyLength,
		uf.member_end_time as memberEndTime,
		uf.member_status as memberStatus,
        uf.recharge as recharge,
		st.name,
		st.id as stuId,
		s.school_name as schoolName
		from users_front uf 
		left join student st on uf.id=st.user_id 
		inner join company c on c.is_area=0 or c.is_area=1 and st.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=st.edu_school
		inner join sys_config_school s on s.company_id=c.id
		where c.id=#{companyId} and  uf.member_buy_length is not NULL
		<if test="mobile != null and mobile != ''">and uf.mobile like '%${mobile}%'</if>
		<if test="name != null and name != ''">and st.name like '%${name}%'</if>
		<if test="memberId != null and memberId != ''">and uf.member_id = #{memberId}</if>
		<if test="username != null and username != ''">and username like '%${username}%'</if>
		<if test="timeLen !=null and timeMark != null">
			<choose>
				<when test="timeMark == 'ing'">and TO_DAYS(uf.member_end_time)-TO_DAYS(NOW())<![CDATA[<=]]>#{timeLen} and TO_DAYS(uf.member_end_time)-TO_DAYS(NOW())<![CDATA[>=]]>0
					 and uf.member_buy_length <![CDATA[<>]]> -1 and uf.member_buy_length <![CDATA[<>]]> 0
					<if test="startDate != null and startDate != ''">
						and uf.member_end_time <![CDATA[>=]]> #{startDate }
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate }
					</if>
				</when>
				<when test="timeMark == 'old'">and TO_DAYS(NOW())-TO_DAYS(uf.member_end_time)<![CDATA[>]]> 0
					 and uf.member_buy_length <![CDATA[<>]]> -1 and uf.member_buy_length <![CDATA[<>]]> 0
					<if test="startDate != null and startDate != ''">
						and uf.member_end_time <![CDATA[>=]]> #{startDate }
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate }
					</if>
				</when>
				<otherwise>
					<if test="startDate != null and startDate != ''">
						and (uf.member_end_time <![CDATA[>=]]> #{startDate } or uf.member_buy_length = -1 or uf.member_buy_length = 0)
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate }
					</if>
				</otherwise>
			</choose>
		</if>
		
		order by st.create_time desc
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="findUserVipListCount" resultType="int" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select count(uf.id)
		from users_front uf 
		left join student st on uf.id=st.user_id 
		left join company c on c.is_area=0 or c.is_area=1 and st.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=st.edu_school
		left join sys_config_school s on s.company_id=c.id
		where c.id=#{companyId} and  uf.member_buy_length is not NULL
		<if test="mobile != null and mobile != ''">and uf.mobile like '%${mobile}%'</if>
		<if test="name != null and name != ''">and st.name like '%${name}%'</if>
		<if test="memberId != null and memberId != ''">and uf.member_id = #{memberId}</if>
		<if test="username != null and username != ''">and username like '%${username}%'</if>
		<if test="timeLen !=null and timeMark != null">
			<choose>
				<when test="timeMark == 'ing'">and TO_DAYS(uf.member_end_time)-TO_DAYS(NOW())<![CDATA[<=]]>#{timeLen} and TO_DAYS(uf.member_end_time)-TO_DAYS(NOW())<![CDATA[>=]]>0
					 and uf.member_buy_length <![CDATA[<>]]> -1 and uf.member_buy_length <![CDATA[<>]]> 0
					<if test="startDate != null and startDate != ''">
						and uf.member_end_time <![CDATA[>=]]> #{startDate }
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate } 
					</if>
				</when>
				<when test="timeMark == 'old'">and TO_DAYS(NOW())-TO_DAYS(uf.member_end_time)<![CDATA[>]]> 0
					 and uf.member_buy_length <![CDATA[<>]]> -1 and uf.member_buy_length <![CDATA[<>]]> 0
					<if test="startDate != null and startDate != ''">
						and uf.member_end_time <![CDATA[>=]]> #{startDate }
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate }
					</if>
				</when>
				<otherwise>
					<if test="startDate != null and startDate != ''">
						and (uf.member_end_time <![CDATA[>=]]> #{startDate } or uf.member_buy_length = -1 or uf.member_buy_length = 0)
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate } 
					</if>
				</otherwise>
			</choose>
		</if>
		order by st.create_time desc limit 1
	</select>
	<select id="findUserVipListForExportExcel" resultType="com.yuxin.wx.vo.user.UsersFrontVo" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select 
		uf.id,
		uf.username,
		uf.password,
		uf.mobile,
		uf.email,
		s.id as schoolId,
		uf.status,
		c.id as companyId,
		uf.email_auth_sign as emailAuthSign,
		uf.email_auth_sendtime as emailAuthSendtime,
		uf.email_auth_code as emailAuthCode,
		uf.user_city as userCity,
		uf.uuid,
		uf.head_pic_min as headPicMin,
		uf.head_pic_mid as headPicMid,
		uf.head_pic_max as headPicMax,
		uf.regist_time as registTime,
		uf.interests,
		uf.vip_flag vipFlag,
		uf.regist_type as registType,
		uf.promote_source as promoteSource,
		uf.promote_keyword as promoteKeyword,
		uf.member_id as memberId,
		uf.member_level as memberLevel,
		uf.member_buy_length as memberBuyLength,
		uf.member_end_time as memberEndTime,
		uf.member_status as memberStatus,
        uf.recharge,
		st.name,
		st.id as stuId,
		s.school_name as schoolName
		from users_front uf 
		left join student st on uf.id=st.user_id 
		left join company c on c.is_area=0 or c.is_area=1 and st.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=st.edu_school
		left join sys_config_school s on s.company_id=c.id
		where c.id=#{companyId} and  uf.member_buy_length is not NULL
		<if test="mobile != null and mobile != ''">and uf.mobile like '%${mobile}%'</if>
		<if test="name != null and name != ''">and st.name like '%${name}%'</if>
		<if test="memberId != null and memberId != ''">and uf.member_id = #{memberId}</if>
		<if test="username != null and username != ''">and username like '%${username}%'</if>
		<if test="timeLen !=null and timeMark != null">
			<choose>
				<when test="timeMark == 'ing'">and TO_DAYS(uf.member_end_time)-TO_DAYS(NOW())<![CDATA[<=]]>#{timeLen} and TO_DAYS(uf.member_end_time)-TO_DAYS(NOW())<![CDATA[>=]]>0
					 and uf.member_buy_length <![CDATA[<>]]> -1 and uf.member_buy_length <![CDATA[<>]]> 0
					<if test="startDate != null and startDate != ''">
						and uf.member_end_time <![CDATA[>=]]> #{startDate }
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate }
					</if>
				</when>
				<when test="timeMark == 'old'">and TO_DAYS(NOW())-TO_DAYS(uf.member_end_time)<![CDATA[>]]> 0
					 and uf.member_buy_length <![CDATA[<>]]> -1 and uf.member_buy_length <![CDATA[<>]]> 0
					<if test="startDate != null and startDate != ''">
						and uf.member_end_time <![CDATA[>=]]> #{startDate }
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate } 
					</if>
				</when>
				<otherwise>
					<if test="startDate != null and startDate != ''">
						and (uf.member_end_time <![CDATA[>=]]> #{startDate } or uf.member_buy_length = -1 or uf.member_buy_length = 0)
					</if>
					<if test="endDate != null and endDate != ''">
						and uf.member_end_time <![CDATA[<=]]> #{endDate }
					</if>
				</otherwise>
			</choose>
		</if>
		
		order by st.create_time desc
	</select>
	
	<select id="findUserVipsList" resultType="com.yuxin.wx.vo.user.UsersFrontVo" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select 
		uf.id,
		uf.username,
		uf.password,
		uf.mobile,
		uf.email,
		uf.school_id as schoolId,
		uf.status,
		c.id as companyId,
		uf.email_auth_sign as emailAuthSign,
		uf.email_auth_sendtime as emailAuthSendtime,
		uf.email_auth_code as emailAuthCode,
		uf.user_city as userCity,
		uf.uuid,
		uf.head_pic_min as headPicMin,
		uf.head_pic_mid as headPicMid,
		uf.head_pic_max as headPicMax,
		uf.regist_time as registTime,
		uf.interests,
		uf.vip_flag vipFlag,
		uf.regist_type as registType,
		uf.promote_source as promoteSource,
		uf.promote_keyword as promoteKeyword,
		uf.member_id as memberId,
		uf.member_level as memberLevel,
		uf.member_buy_length as memberBuyLength,
		uf.member_end_time as memberEndTime,
        ur.recharge as recharge,
		st.name,
		s.school_name as schoolName
		from users_front uf 
		left join student st on uf.id=st.user_id 
		left join company c on c.is_area=0 or c.is_area=1 and st.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=st.edu_school
		left join sys_config_school s on s.company_id=c.id 
		where c.id=#{companyId} and  uf.member_id is not NULL and uf.member_id <![CDATA[<>]]> '0'
		<if test="timeLen !=null">and TO_DAYS(NOW())-TO_DAYS(uf.regist_time)<![CDATA[<=]]>#{timeLen}</if>
		limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="countList" resultType="int" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select 
		count(1)
		from users_front uf
		left join student st on uf.id=st.user_id 
		left join company c on c.is_area=0 or c.is_area=1 and st.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=st.edu_school
		left join sys_config_school s on s.company_id=c.id 
		where c.id=#{companyId}
			<if test="schoolId != null"> and s.id=#{schoolId}</if>
			<if test="startDate != null"> and date_format(uf.regist_time, "%Y-%m-%d") <![CDATA[>=]]> '${startDate}'</if>
			<if test="endDate != null"> and date_format(uf.regist_time, "%Y-%m-%d") <![CDATA[<=]]> '${endDate}'</if>
			<if test="vipFlag != null"> and uf.vip_flag = #{vipFlag}</if>
			<if test="registType != null"> and uf.regist_type = #{registType}</if>
			<if test="timeLen !=null">and TO_DAYS(NOW())-TO_DAYS(uf.regist_time)<![CDATA[<=]]>#{timeLen}</if>
		limit 1
	</select>
	<select id="countUserByDate" resultType="map" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
	select  count(u.id) num,date_format(u.regist_time, "%Y-%m-%d") registTime
		from users_front u
		left join student s on s.user_id = u.id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		left join sys_config_school st on st.company_id=c.id 
		LEFT JOIN sys_config_dict d ON d.`item_code` = s.`edu_school`
		where c.id=#{companyId}
			<if test="schoolId != null"> and st.id=#{schoolId}</if>
			<if test="startDate != null"> and date_format(u.regist_time, "%Y-%m-%d") <![CDATA[>=]]> '${startDate}'</if>
			<if test="endDate != null"> and date_format(u.regist_time, "%Y-%m-%d") <![CDATA[<=]]> '${endDate}'</if>
			<if test="vipFlag != null"> and vip_flag = #{vipFlag}</if>
			<if test="registType != null"> and regist_type = #{registType}</if>
			<if test="timeLen !=null">and TO_DAYS(NOW())-TO_DAYS(u.regist_time)<![CDATA[<=]]>#{timeLen}</if>
			<if test="eduArea != null and eduArea!=''"> and s.edu_area=#{eduArea}</if>
			<if test="eduSchool != null and eduSchool!=''"> and d.item_code =#{eduSchool}</if>
			<if test="isStu != null and isStu == 1"> and edu_identity = 0 AND IFNULL(u.`teacher_flag`,0) != 1</if>
			group by date_format(u.regist_time, "%Y-%m-%d")
	</select>
	<select id="countOffLine" resultType="com.yuxin.wx.vo.user.UsersFrontVo" parameterType="com.yuxin.wx.vo.user.UsersFrontVo">
		select 
		uf.id,
		uf.vip_flag vipFlag,
		uf.regist_type registType
		from users_front uf 
		left join student s on s.user_id = uf.id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		left join sys_config_school st on st.company_id=c.id 
		where c.id=#{companyId}
			<if test="schoolId != null"> and st.id=#{schoolId}</if>
			<if test="startDate != null"> and date_format(uf.regist_time, "%Y-%m-%d") <![CDATA[>=]]> '${startDate}'</if>
			<if test="endDate != null"> and date_format(uf.regist_time, "%Y-%m-%d") <![CDATA[<=]]> '${endDate}'</if>
			<if test="vipFlag != null"> and uf.vip_flag = #{vipFlag}</if>
			<if test="registType != null"> and uf.regist_type = #{registType}</if>
			<if test="timeLen !=null">and TO_DAYS(NOW())-TO_DAYS(uf.regist_time)<![CDATA[<=]]>#{timeLen}</if>
	</select>
	
	<!-- 根据学员查询前台账号 -->
	<select id="findUserFrontByStudentId" parameterType="int" resultMap="usersFrontResultMap">
		select u.* 
		from users_front u 
		INNER JOIN student s on s.user_id=u.id
		where s.id=#{stuId}
	</select>
	
	<!-- 公司学员积分统计 -->
	<select id="queryStudentIntegral" parameterType="com.yuxin.wx.vo.user.UsersFrontIntegralVo" resultMap="userFrontIntegralMapVo">
		select u.id as userId,u.integral_remaining as integralRemaining,u.username,s.id as stuId,s.name as stuName,s.mobile as mobile
		from users_front u 
		INNER JOIN student s on s.user_id=u.id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where c.id=#{companyId} and s.delete_flag=0
		<if test="stuName != null and stuName != ''">and s.name like '%${stuName}%'</if>
	    <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	    <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	    limit #{firstIndex},#{pageSize}
	</select>
	
	<select id="queryStudentIntegralCount" parameterType="com.yuxin.wx.vo.user.UsersFrontIntegralVo" resultType="int">
		select count(u.id)
		from users_front u 
		INNER JOIN student s on s.user_id=u.id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where c.id=#{companyId} and s.delete_flag=0
		<if test="stuName != null and stuName != ''">and s.name like '%${stuName}%'</if>
	    <if test="mobile != null and mobile != ''">and s.mobile like '%${mobile}%'</if>
	    <if test="username != null and username != ''">and u.username like '%${username}%'</if>
	    limit 1
	</select>
	<select id="findUsersFrontByMemberId" parameterType="int"  resultMap="usersFrontResultMap">
			select   * from 
			users_front  where  member_id=#{memberId}
	</select>
	
	<select id="findUserMemberByCompanyId" parameterType="map" resultMap="userStuResultMap">
		select u.id,
			u.mobile,
			u.member_end_time,
			u.nick_name,
			s.name
		from users_front u
		left join student s	on u.id = s.user_id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where c.id = #{companyId}
			and u.status = 1
			and u.member_status = 1
			and u.member_buy_length != -1
			and u.member_end_time >= #{date}
	</select>
	
	<select id="findConponsUsersByCondition" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.model.user.UsersFront" >
		select u.id,u.username,u.mobile
		from users_front u
		left join student s	on u.id = s.user_id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school
		where c.id=#{companyId} 
		<if test="status != null">and u.status = #{status}</if>
		<if test="vipFlag != null"> and u.vip_flag = #{vipFlag}</if>
		<if test="memberLevel != null">and u.member_id in(${memberLevel}) and u.member_status=1 and (u.member_buy_length>0 || u.member_buy_length=-1) and (TO_DAYS(date_format(NOW(), "%Y-%m-%d"))-TO_DAYS(u.member_end_time) <![CDATA[<]]> 0 || u.member_end_time is null)</if>
		<if test="username != null and username != ''">and u.username = #{username}</if>
		<if test="mobile != null and mobile != ''">and u.mobile = #{mobile}</if>
	</select>
	<select id="findConponsUsersByConditionIn" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.model.user.UsersFront" >
		select u.id,u.username,u.mobile
		from users_front u
		left join student s	on u.id = s.user_id
		where u.username=#{username}
	</select>
	<!-- 根据邀请码查找userFrontVo -->
	<select id="findUserVoByInvitCode" resultMap="usersFrontVoResultMap" parameterType="map">
		SELECT u.id from users_front u
		left join student s	on u.id = s.user_id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school 
		WHERE c.id = #{companyId} and a.invite_code = #{code} limit 1
	</select>
	
	<!-- 检查数量 -->
	<select id="findUsersfrontCountByMobileOrUsername" resultType="int" parameterType="com.yuxin.wx.vo.student.SelectStudentOrUsersfrontVo">
		select count(uf.id)
		from users_front uf
		left join student s	on uf.id = s.user_id
		left join company c on c.is_area=0 or c.is_area=1 and s.edu_area=c.edu_area_school or c.is_area=2 and c.edu_area_school=s.edu_school 
		where c.id= #{companyId} and	( uf.username = #{username} or uf.mobile = #{mobile} )
	</select>
	
	<select id="findUsersfrontByMobileOrUsername" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.vo.student.SelectStudentOrUsersfrontVo">
		select <include refid="table_columns" />
		from users_front uf
		where ( uf.username = #{username} or uf.mobile = #{mobile} )
		<if test="mobile != null and mobile != ''"> 
			ORDER BY field(uf.mobile,#{mobile} ) desc  
		</if>
		limit 0,1
	</select>
	<select id="findUsersFrontOnlyByMobile" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.vo.student.SelectStudentOrUsersfrontVo">
		select <include refid="table_columns" />
		from users_front
		where mobile = #{mobile} limit 0,1
	</select>
	<select id="findUsersFrontOnlyByUsername" resultMap="usersFrontResultMap" parameterType="com.yuxin.wx.vo.student.SelectStudentOrUsersfrontVo">
		select <include refid="table_columns" />
		from users_front
		where username = #{username} limit 0,1
	</select>


	<!-- 根据学员查询前台账号 -->
	<select id="findUserFrontAndStudent" parameterType="com.yuxin.wx.model.student.Student" resultMap="usersFrontVoResultMap">
		select u.*,s.name
		from users_front u INNER JOIN student s on s.user_id=u.id
		where u.wx_open_id is not null and u.wx_open_id !='' and s.edu_step = #{eduStep}
		and s.edu_year = #{eduYear}
	</select>


</mapper>